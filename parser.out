Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AUTO
    CONTINUE
    DIRRETORNO
    ENUM
    EXIT
    EXTERN
    FOR
    IMPRIMIR
    INTERRO
    LABEL
    MIENTRAS
    NUMERO
    PILAPOS
    PILAPUNTERO
    PTEMPORAL
    REGISTER
    RETURN
    SCAN
    SIZEOF
    UNSET
    VALORDEVUELTO

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> definicion_instr
Rule 5     instruccion -> asignacion_instr
Rule 6     instruccion -> STRUCTDEF
Rule 7     instruccion -> FUNCION
Rule 8     instruccion -> FUNCMAIN
Rule 9     FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE
Rule 10    DEFINEL -> ID DOSP
Rule 11    DEFINEGOTO -> GOTO ID PTCOMA
Rule 12    imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
Rule 13    definicion_instr -> TIPO_VAR LISTAID PTCOMA
Rule 14    LISTAID -> LISTAID COMA IDDECLA
Rule 15    LISTAID -> IDDECLA
Rule 16    IDDECLA -> IDT
Rule 17    IDDECLA -> IDT IGUAL expresion_log_relacional
Rule 18    IDT -> ID
Rule 19    IDT -> ID LIND
Rule 20    LIND -> LIND IND
Rule 21    LIND -> IND
Rule 22    IND -> CORIZQ CORDER
Rule 23    IND -> CORIZQ expresion_log_relacional CORDER
Rule 24    STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA
Rule 25    IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA
Rule 26    IDSTRUCT -> TIPO_VAR ID PTCOMA
Rule 27    TIPO_VAR -> INT
Rule 28    TIPO_VAR -> DOUBLE
Rule 29    TIPO_VAR -> FLOAT
Rule 30    TIPO_VAR -> CHAR
Rule 31    TIPO_VAR -> VOID
Rule 32    asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA
Rule 33    TIPO_AS -> IGUAL
Rule 34    TIPO_AS -> MASIGUAL
Rule 35    TIPO_AS -> MENOSIGUAL
Rule 36    TIPO_AS -> PORIGUAL
Rule 37    TIPO_AS -> DIVIGUAL
Rule 38    TIPO_AS -> RESIGUAL
Rule 39    TIPO_AS -> IZQIGUAL
Rule 40    TIPO_AS -> DERIGUAL
Rule 41    TIPO_AS -> ANDIGUAL
Rule 42    TIPO_AS -> NOTIGUAL
Rule 43    TIPO_AS -> ORIGUAL
Rule 44    FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE
Rule 45    PARAMETROS -> PARAMETROS COMA PARAMETRO
Rule 46    PARAMETROS -> PARAMETRO
Rule 47    PARAMETRO -> TIPO_VAR ID
Rule 48    PARAMETRO -> <empty>
Rule 49    BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER
Rule 50    BLOQUE -> SENTENCIAS
Rule 51    SENTENCIAS -> SENTENCIAS SENTENCIA
Rule 52    SENTENCIAS -> SENTENCIA
Rule 53    SENTENCIA -> definicion_instr
Rule 54    SENTENCIA -> asignacion_instr
Rule 55    SENTENCIA -> imprimir_instr
Rule 56    SENTENCIA -> DEFINEL
Rule 57    SENTENCIA -> DEFINEGOTO
Rule 58    SENTENCIA -> IFFUN
Rule 59    SENTENCIA -> SWITCHFUN
Rule 60    SENTENCIA -> BREAKF
Rule 61    SENTENCIA -> WHILEF
Rule 62    SENTENCIA -> DOFUN
Rule 63    DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
Rule 64    WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
Rule 65    SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
Rule 66    LISTACASE -> LISTACASE CASES
Rule 67    LISTACASE -> CASES
Rule 68    CASES -> CASE expresion_log_relacional DOSP SENTENCIAS
Rule 69    CASES -> DEFAULT DOSP SENTENCIAS
Rule 70    BREAKF -> BREAK PTCOMA
Rule 71    IFFUN -> if_instr
Rule 72    IFFUN -> if_instr LISTA_ELSEIF
Rule 73    IFFUN -> if_instr LISTA_ELSEIF else_instr
Rule 74    IFFUN -> if_instr else_instr
Rule 75    if_instr -> IF expresion_numerica BLOQUE
Rule 76    LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr
Rule 77    LISTA_ELSEIF -> if_else_instr
Rule 78    if_else_instr -> ELSE if_instr
Rule 79    else_instr -> ELSE BLOQUE
Rule 80    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 81    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 82    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 83    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 84    expresion_numerica -> expresion_numerica RES expresion_numerica
Rule 85    expresion_numerica -> expresion_numerica ANDBIT expresion_numerica
Rule 86    expresion_numerica -> expresion_numerica ORBIT expresion_numerica
Rule 87    expresion_numerica -> expresion_numerica XORBIT expresion_numerica
Rule 88    expresion_numerica -> expresion_numerica IZQBIT expresion_numerica
Rule 89    expresion_numerica -> expresion_numerica DERBIT expresion_numerica
Rule 90    expresion_numerica -> NOTBIT expresion_numerica
Rule 91    expresion_numerica -> MENOS expresion_numerica
Rule 92    expresion_numerica -> PARIZQ expresion_log_relacional PARDER
Rule 93    expresion_numerica -> ENTERO
Rule 94    expresion_numerica -> DECIMAL
Rule 95    expresion_numerica -> ID
Rule 96    expresion_numerica -> CADENA
Rule 97    expresion_numerica -> CADE
Rule 98    expresion_numerica -> READ PARIZQ PARDER
Rule 99    expresion_numerica -> ARRAY PARIZQ PARDER
Rule 100   expresion_numerica -> TEMPORAL ACCESO
Rule 101   ACCESO -> ACCESO CORIZQ expresion_numerica CORDER
Rule 102   ACCESO -> CORIZQ expresion_numerica CORDER
Rule 103   expresion_numerica -> TIPOCONVERSION expresion_numerica
Rule 104   TIPOCONVERSION -> PARIZQ INT PARDER
Rule 105   TIPOCONVERSION -> PARIZQ FLOAT PARDER
Rule 106   TIPOCONVERSION -> PARIZQ CHAR PARDER
Rule 107   expresion_numerica -> ABS PARIZQ expresion_numerica PARDER
Rule 108   expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica
Rule 109   expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica
Rule 110   expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica
Rule 111   expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica
Rule 112   expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica
Rule 113   expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica
Rule 114   expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional
Rule 115   expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional
Rule 116   expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional
Rule 117   expresion_log_relacional -> NOTLOG expresion_log_relacional
Rule 118   expresion_log_relacional -> expresion_numerica

Terminals, with rules where they appear

ABS                  : 107
ANDBIT               : 85
ANDIGUAL             : 41
ANDLOG               : 114
ARRAY                : 99
AUTO                 : 
BREAK                : 70
CADE                 : 97
CADENA               : 96
CASE                 : 68
CHAR                 : 30 106
COMA                 : 14 45
CONTINUE             : 
CORDER               : 22 23 101 102
CORIZQ               : 22 23 101 102
DECIMAL              : 94
DEFAULT              : 69
DERBIT               : 89
DERIGUAL             : 40
DIRRETORNO           : 
DIVIDIDO             : 83
DIVIGUAL             : 37
DO                   : 63
DOSP                 : 10 68 69
DOUBLE               : 28
ELSE                 : 78 79
ENTERO               : 93
ENUM                 : 
EXIT                 : 
EXTERN               : 
FLOAT                : 29 105
FOR                  : 
GOTO                 : 11
ID                   : 10 11 18 19 24 25 26 32 44 47 95
IF                   : 75
IGUAL                : 17 33
IGUALQUE             : 110
IMPRIMIR             : 
INT                  : 27 104
INTERRO              : 
IZQBIT               : 88
IZQIGUAL             : 39
LABEL                : 
LLAVDER              : 24 49 63 64 65
LLAVIZQ              : 24 49 63 64 65
MAIN                 : 9
MAS                  : 80
MASIGUAL             : 34
MAYORIG              : 112
MAYQUE               : 108
MENORIG              : 113
MENOS                : 81 91
MENOSIGUAL           : 35
MENQUE               : 109
MIENTRAS             : 
NIGUALQUE            : 111
NOTBIT               : 90
NOTIGUAL             : 42
NOTLOG               : 117
NUMERO               : 
ORBIT                : 86
ORIGUAL              : 43
ORLOG                : 115
PARDER               : 9 12 44 92 98 99 104 105 106 107
PARIZQ               : 9 12 44 92 98 99 104 105 106 107
PILAPOS              : 
PILAPUNTERO          : 
POR                  : 82
PORIGUAL             : 36
PRINT                : 12
PTCOMA               : 11 12 13 24 25 26 32 63 70
PTEMPORAL            : 
READ                 : 98
REGISTER             : 
RES                  : 84
RESIGUAL             : 38
RETURN               : 
SCAN                 : 
SIZEOF               : 
STRUCT               : 24
SWITCH               : 65
TEMPORAL             : 100
UNSET                : 
VALORDEVUELTO        : 
VOID                 : 31
WHILE                : 63 64
XORBIT               : 87
XORLOG               : 116
error                : 

Nonterminals, with rules where they appear

ACCESO               : 100 101
BLOQUE               : 9 44 75 79
BREAKF               : 60
CASES                : 66 67
DEFINEGOTO           : 57
DEFINEL              : 56
DOFUN                : 62
FUNCION              : 7
FUNCMAIN             : 8
IDDECLA              : 14 15
IDSTRUCT             : 24 25
IDT                  : 16 17
IFFUN                : 58
IND                  : 20 21
LIND                 : 19 20
LISTACASE            : 65 66
LISTAID              : 13 14
LISTA_ELSEIF         : 72 73 76
PARAMETRO            : 45 46
PARAMETROS           : 44 45
SENTENCIA            : 51 52
SENTENCIAS           : 49 50 51 63 64 68 69
STRUCTDEF            : 6
SWITCHFUN            : 59
TIPOCONVERSION       : 103
TIPO_AS              : 32
TIPO_VAR             : 9 13 25 26 44 47
WHILEF               : 61
asignacion_instr     : 5 54
definicion_instr     : 4 53
else_instr           : 73 74
expresion_log_relacional : 12 17 23 32 68 92 114 114 115 115 116 116 117
expresion_numerica   : 63 64 65 75 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 91 101 102 103 107 108 108 109 109 110 110 111 111 112 112 113 113 118
if_else_instr        : 76 77
if_instr             : 71 72 73 74 78
imprimir_instr       : 55
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . definicion_instr
    (5) instruccion -> . asignacion_instr
    (6) instruccion -> . STRUCTDEF
    (7) instruccion -> . FUNCION
    (8) instruccion -> . FUNCMAIN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (24) STRUCTDEF -> . STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA
    (44) FUNCION -> . TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE
    (9) FUNCMAIN -> . TIPO_VAR MAIN PARIZQ PARDER BLOQUE
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    ID              shift and go to state 10
    STRUCT          shift and go to state 11
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    definicion_instr               shift and go to state 4
    asignacion_instr               shift and go to state 5
    STRUCTDEF                      shift and go to state 6
    FUNCION                        shift and go to state 7
    FUNCMAIN                       shift and go to state 8
    TIPO_VAR                       shift and go to state 9

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . definicion_instr
    (5) instruccion -> . asignacion_instr
    (6) instruccion -> . STRUCTDEF
    (7) instruccion -> . FUNCION
    (8) instruccion -> . FUNCMAIN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (24) STRUCTDEF -> . STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA
    (44) FUNCION -> . TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE
    (9) FUNCMAIN -> . TIPO_VAR MAIN PARIZQ PARDER BLOQUE
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    $end            reduce using rule 1 (init -> instrucciones .)
    ID              shift and go to state 10
    STRUCT          shift and go to state 11
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    instruccion                    shift and go to state 17
    definicion_instr               shift and go to state 4
    asignacion_instr               shift and go to state 5
    STRUCTDEF                      shift and go to state 6
    FUNCION                        shift and go to state 7
    FUNCMAIN                       shift and go to state 8
    TIPO_VAR                       shift and go to state 9

state 3

    (3) instrucciones -> instruccion .

    ID              reduce using rule 3 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 3 (instrucciones -> instruccion .)
    INT             reduce using rule 3 (instrucciones -> instruccion .)
    DOUBLE          reduce using rule 3 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion .)
    CHAR            reduce using rule 3 (instrucciones -> instruccion .)
    VOID            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> definicion_instr .

    ID              reduce using rule 4 (instruccion -> definicion_instr .)
    STRUCT          reduce using rule 4 (instruccion -> definicion_instr .)
    INT             reduce using rule 4 (instruccion -> definicion_instr .)
    DOUBLE          reduce using rule 4 (instruccion -> definicion_instr .)
    FLOAT           reduce using rule 4 (instruccion -> definicion_instr .)
    CHAR            reduce using rule 4 (instruccion -> definicion_instr .)
    VOID            reduce using rule 4 (instruccion -> definicion_instr .)
    $end            reduce using rule 4 (instruccion -> definicion_instr .)


state 5

    (5) instruccion -> asignacion_instr .

    ID              reduce using rule 5 (instruccion -> asignacion_instr .)
    STRUCT          reduce using rule 5 (instruccion -> asignacion_instr .)
    INT             reduce using rule 5 (instruccion -> asignacion_instr .)
    DOUBLE          reduce using rule 5 (instruccion -> asignacion_instr .)
    FLOAT           reduce using rule 5 (instruccion -> asignacion_instr .)
    CHAR            reduce using rule 5 (instruccion -> asignacion_instr .)
    VOID            reduce using rule 5 (instruccion -> asignacion_instr .)
    $end            reduce using rule 5 (instruccion -> asignacion_instr .)


state 6

    (6) instruccion -> STRUCTDEF .

    ID              reduce using rule 6 (instruccion -> STRUCTDEF .)
    STRUCT          reduce using rule 6 (instruccion -> STRUCTDEF .)
    INT             reduce using rule 6 (instruccion -> STRUCTDEF .)
    DOUBLE          reduce using rule 6 (instruccion -> STRUCTDEF .)
    FLOAT           reduce using rule 6 (instruccion -> STRUCTDEF .)
    CHAR            reduce using rule 6 (instruccion -> STRUCTDEF .)
    VOID            reduce using rule 6 (instruccion -> STRUCTDEF .)
    $end            reduce using rule 6 (instruccion -> STRUCTDEF .)


state 7

    (7) instruccion -> FUNCION .

    ID              reduce using rule 7 (instruccion -> FUNCION .)
    STRUCT          reduce using rule 7 (instruccion -> FUNCION .)
    INT             reduce using rule 7 (instruccion -> FUNCION .)
    DOUBLE          reduce using rule 7 (instruccion -> FUNCION .)
    FLOAT           reduce using rule 7 (instruccion -> FUNCION .)
    CHAR            reduce using rule 7 (instruccion -> FUNCION .)
    VOID            reduce using rule 7 (instruccion -> FUNCION .)
    $end            reduce using rule 7 (instruccion -> FUNCION .)


state 8

    (8) instruccion -> FUNCMAIN .

    ID              reduce using rule 8 (instruccion -> FUNCMAIN .)
    STRUCT          reduce using rule 8 (instruccion -> FUNCMAIN .)
    INT             reduce using rule 8 (instruccion -> FUNCMAIN .)
    DOUBLE          reduce using rule 8 (instruccion -> FUNCMAIN .)
    FLOAT           reduce using rule 8 (instruccion -> FUNCMAIN .)
    CHAR            reduce using rule 8 (instruccion -> FUNCMAIN .)
    VOID            reduce using rule 8 (instruccion -> FUNCMAIN .)
    $end            reduce using rule 8 (instruccion -> FUNCMAIN .)


state 9

    (13) definicion_instr -> TIPO_VAR . LISTAID PTCOMA
    (44) FUNCION -> TIPO_VAR . ID PARIZQ PARAMETROS PARDER BLOQUE
    (9) FUNCMAIN -> TIPO_VAR . MAIN PARIZQ PARDER BLOQUE
    (14) LISTAID -> . LISTAID COMA IDDECLA
    (15) LISTAID -> . IDDECLA
    (16) IDDECLA -> . IDT
    (17) IDDECLA -> . IDT IGUAL expresion_log_relacional
    (18) IDT -> . ID
    (19) IDT -> . ID LIND

    ID              shift and go to state 19
    MAIN            shift and go to state 20

    LISTAID                        shift and go to state 18
    IDDECLA                        shift and go to state 21
    IDT                            shift and go to state 22

state 10

    (32) asignacion_instr -> ID . TIPO_AS expresion_log_relacional PTCOMA
    (33) TIPO_AS -> . IGUAL
    (34) TIPO_AS -> . MASIGUAL
    (35) TIPO_AS -> . MENOSIGUAL
    (36) TIPO_AS -> . PORIGUAL
    (37) TIPO_AS -> . DIVIGUAL
    (38) TIPO_AS -> . RESIGUAL
    (39) TIPO_AS -> . IZQIGUAL
    (40) TIPO_AS -> . DERIGUAL
    (41) TIPO_AS -> . ANDIGUAL
    (42) TIPO_AS -> . NOTIGUAL
    (43) TIPO_AS -> . ORIGUAL

    IGUAL           shift and go to state 24
    MASIGUAL        shift and go to state 25
    MENOSIGUAL      shift and go to state 26
    PORIGUAL        shift and go to state 27
    DIVIGUAL        shift and go to state 28
    RESIGUAL        shift and go to state 29
    IZQIGUAL        shift and go to state 30
    DERIGUAL        shift and go to state 31
    ANDIGUAL        shift and go to state 32
    NOTIGUAL        shift and go to state 33
    ORIGUAL         shift and go to state 34

    TIPO_AS                        shift and go to state 23

state 11

    (24) STRUCTDEF -> STRUCT . ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA

    ID              shift and go to state 35


state 12

    (27) TIPO_VAR -> INT .

    ID              reduce using rule 27 (TIPO_VAR -> INT .)
    MAIN            reduce using rule 27 (TIPO_VAR -> INT .)


state 13

    (28) TIPO_VAR -> DOUBLE .

    ID              reduce using rule 28 (TIPO_VAR -> DOUBLE .)
    MAIN            reduce using rule 28 (TIPO_VAR -> DOUBLE .)


state 14

    (29) TIPO_VAR -> FLOAT .

    ID              reduce using rule 29 (TIPO_VAR -> FLOAT .)
    MAIN            reduce using rule 29 (TIPO_VAR -> FLOAT .)


state 15

    (30) TIPO_VAR -> CHAR .

    ID              reduce using rule 30 (TIPO_VAR -> CHAR .)
    MAIN            reduce using rule 30 (TIPO_VAR -> CHAR .)


state 16

    (31) TIPO_VAR -> VOID .

    ID              reduce using rule 31 (TIPO_VAR -> VOID .)
    MAIN            reduce using rule 31 (TIPO_VAR -> VOID .)


state 17

    (2) instrucciones -> instrucciones instruccion .

    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DOUBLE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 18

    (13) definicion_instr -> TIPO_VAR LISTAID . PTCOMA
    (14) LISTAID -> LISTAID . COMA IDDECLA

    PTCOMA          shift and go to state 36
    COMA            shift and go to state 37


state 19

    (44) FUNCION -> TIPO_VAR ID . PARIZQ PARAMETROS PARDER BLOQUE
    (18) IDT -> ID .
    (19) IDT -> ID . LIND
    (20) LIND -> . LIND IND
    (21) LIND -> . IND
    (22) IND -> . CORIZQ CORDER
    (23) IND -> . CORIZQ expresion_log_relacional CORDER

    PARIZQ          shift and go to state 38
    IGUAL           reduce using rule 18 (IDT -> ID .)
    PTCOMA          reduce using rule 18 (IDT -> ID .)
    COMA            reduce using rule 18 (IDT -> ID .)
    CORIZQ          shift and go to state 41

    LIND                           shift and go to state 39
    IND                            shift and go to state 40

state 20

    (9) FUNCMAIN -> TIPO_VAR MAIN . PARIZQ PARDER BLOQUE

    PARIZQ          shift and go to state 42


state 21

    (15) LISTAID -> IDDECLA .

    PTCOMA          reduce using rule 15 (LISTAID -> IDDECLA .)
    COMA            reduce using rule 15 (LISTAID -> IDDECLA .)


state 22

    (16) IDDECLA -> IDT .
    (17) IDDECLA -> IDT . IGUAL expresion_log_relacional

    PTCOMA          reduce using rule 16 (IDDECLA -> IDT .)
    COMA            reduce using rule 16 (IDDECLA -> IDT .)
    IGUAL           shift and go to state 43


state 23

    (32) asignacion_instr -> ID TIPO_AS . expresion_log_relacional PTCOMA
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 45
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 24

    (33) TIPO_AS -> IGUAL .

    NOTLOG          reduce using rule 33 (TIPO_AS -> IGUAL .)
    NOTBIT          reduce using rule 33 (TIPO_AS -> IGUAL .)
    MENOS           reduce using rule 33 (TIPO_AS -> IGUAL .)
    PARIZQ          reduce using rule 33 (TIPO_AS -> IGUAL .)
    ENTERO          reduce using rule 33 (TIPO_AS -> IGUAL .)
    DECIMAL         reduce using rule 33 (TIPO_AS -> IGUAL .)
    ID              reduce using rule 33 (TIPO_AS -> IGUAL .)
    CADENA          reduce using rule 33 (TIPO_AS -> IGUAL .)
    CADE            reduce using rule 33 (TIPO_AS -> IGUAL .)
    READ            reduce using rule 33 (TIPO_AS -> IGUAL .)
    ARRAY           reduce using rule 33 (TIPO_AS -> IGUAL .)
    TEMPORAL        reduce using rule 33 (TIPO_AS -> IGUAL .)
    ABS             reduce using rule 33 (TIPO_AS -> IGUAL .)


state 25

    (34) TIPO_AS -> MASIGUAL .

    NOTLOG          reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    NOTBIT          reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    MENOS           reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    PARIZQ          reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    ENTERO          reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    DECIMAL         reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    ID              reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    CADENA          reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    CADE            reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    READ            reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    ARRAY           reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    TEMPORAL        reduce using rule 34 (TIPO_AS -> MASIGUAL .)
    ABS             reduce using rule 34 (TIPO_AS -> MASIGUAL .)


state 26

    (35) TIPO_AS -> MENOSIGUAL .

    NOTLOG          reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    NOTBIT          reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    MENOS           reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    PARIZQ          reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    ENTERO          reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    DECIMAL         reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    ID              reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    CADENA          reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    CADE            reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    READ            reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    ARRAY           reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    TEMPORAL        reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)
    ABS             reduce using rule 35 (TIPO_AS -> MENOSIGUAL .)


state 27

    (36) TIPO_AS -> PORIGUAL .

    NOTLOG          reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    NOTBIT          reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    MENOS           reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    PARIZQ          reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    ENTERO          reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    DECIMAL         reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    ID              reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    CADENA          reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    CADE            reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    READ            reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    ARRAY           reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    TEMPORAL        reduce using rule 36 (TIPO_AS -> PORIGUAL .)
    ABS             reduce using rule 36 (TIPO_AS -> PORIGUAL .)


state 28

    (37) TIPO_AS -> DIVIGUAL .

    NOTLOG          reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    NOTBIT          reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    MENOS           reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    PARIZQ          reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    ENTERO          reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    DECIMAL         reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    ID              reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    CADENA          reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    CADE            reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    READ            reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    ARRAY           reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    TEMPORAL        reduce using rule 37 (TIPO_AS -> DIVIGUAL .)
    ABS             reduce using rule 37 (TIPO_AS -> DIVIGUAL .)


state 29

    (38) TIPO_AS -> RESIGUAL .

    NOTLOG          reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    NOTBIT          reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    MENOS           reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    PARIZQ          reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    ENTERO          reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    DECIMAL         reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    ID              reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    CADENA          reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    CADE            reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    READ            reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    ARRAY           reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    TEMPORAL        reduce using rule 38 (TIPO_AS -> RESIGUAL .)
    ABS             reduce using rule 38 (TIPO_AS -> RESIGUAL .)


state 30

    (39) TIPO_AS -> IZQIGUAL .

    NOTLOG          reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    NOTBIT          reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    MENOS           reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    PARIZQ          reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    ENTERO          reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    DECIMAL         reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    ID              reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    CADENA          reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    CADE            reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    READ            reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    ARRAY           reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    TEMPORAL        reduce using rule 39 (TIPO_AS -> IZQIGUAL .)
    ABS             reduce using rule 39 (TIPO_AS -> IZQIGUAL .)


state 31

    (40) TIPO_AS -> DERIGUAL .

    NOTLOG          reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    NOTBIT          reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    MENOS           reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    PARIZQ          reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    ENTERO          reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    DECIMAL         reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    ID              reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    CADENA          reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    CADE            reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    READ            reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    ARRAY           reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    TEMPORAL        reduce using rule 40 (TIPO_AS -> DERIGUAL .)
    ABS             reduce using rule 40 (TIPO_AS -> DERIGUAL .)


state 32

    (41) TIPO_AS -> ANDIGUAL .

    NOTLOG          reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    NOTBIT          reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    MENOS           reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    PARIZQ          reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    ENTERO          reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    DECIMAL         reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    ID              reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    CADENA          reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    CADE            reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    READ            reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    ARRAY           reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    TEMPORAL        reduce using rule 41 (TIPO_AS -> ANDIGUAL .)
    ABS             reduce using rule 41 (TIPO_AS -> ANDIGUAL .)


state 33

    (42) TIPO_AS -> NOTIGUAL .

    NOTLOG          reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    NOTBIT          reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    MENOS           reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    PARIZQ          reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    ENTERO          reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    DECIMAL         reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    ID              reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    CADENA          reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    CADE            reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    READ            reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    ARRAY           reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    TEMPORAL        reduce using rule 42 (TIPO_AS -> NOTIGUAL .)
    ABS             reduce using rule 42 (TIPO_AS -> NOTIGUAL .)


state 34

    (43) TIPO_AS -> ORIGUAL .

    NOTLOG          reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    NOTBIT          reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    MENOS           reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    PARIZQ          reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    ENTERO          reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    DECIMAL         reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    ID              reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    CADENA          reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    CADE            reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    READ            reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    ARRAY           reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    TEMPORAL        reduce using rule 43 (TIPO_AS -> ORIGUAL .)
    ABS             reduce using rule 43 (TIPO_AS -> ORIGUAL .)


state 35

    (24) STRUCTDEF -> STRUCT ID . LLAVIZQ IDSTRUCT LLAVDER PTCOMA

    LLAVIZQ         shift and go to state 60


state 36

    (13) definicion_instr -> TIPO_VAR LISTAID PTCOMA .

    ID              reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    STRUCT          reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    INT             reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    DOUBLE          reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    FLOAT           reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    CHAR            reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    VOID            reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    $end            reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    PRINT           reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    GOTO            reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    SWITCH          reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    BREAK           reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    WHILE           reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    DO              reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    IF              reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    LLAVDER         reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    ELSE            reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    CASE            reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)
    DEFAULT         reduce using rule 13 (definicion_instr -> TIPO_VAR LISTAID PTCOMA .)


state 37

    (14) LISTAID -> LISTAID COMA . IDDECLA
    (16) IDDECLA -> . IDT
    (17) IDDECLA -> . IDT IGUAL expresion_log_relacional
    (18) IDT -> . ID
    (19) IDT -> . ID LIND

    ID              shift and go to state 62

    IDDECLA                        shift and go to state 61
    IDT                            shift and go to state 22

state 38

    (44) FUNCION -> TIPO_VAR ID PARIZQ . PARAMETROS PARDER BLOQUE
    (45) PARAMETROS -> . PARAMETROS COMA PARAMETRO
    (46) PARAMETROS -> . PARAMETRO
    (47) PARAMETRO -> . TIPO_VAR ID
    (48) PARAMETRO -> .
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    PARDER          reduce using rule 48 (PARAMETRO -> .)
    COMA            reduce using rule 48 (PARAMETRO -> .)
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    TIPO_VAR                       shift and go to state 63
    PARAMETROS                     shift and go to state 64
    PARAMETRO                      shift and go to state 65

state 39

    (19) IDT -> ID LIND .
    (20) LIND -> LIND . IND
    (22) IND -> . CORIZQ CORDER
    (23) IND -> . CORIZQ expresion_log_relacional CORDER

    IGUAL           reduce using rule 19 (IDT -> ID LIND .)
    PTCOMA          reduce using rule 19 (IDT -> ID LIND .)
    COMA            reduce using rule 19 (IDT -> ID LIND .)
    CORIZQ          shift and go to state 41

    IND                            shift and go to state 66

state 40

    (21) LIND -> IND .

    CORIZQ          reduce using rule 21 (LIND -> IND .)
    IGUAL           reduce using rule 21 (LIND -> IND .)
    PTCOMA          reduce using rule 21 (LIND -> IND .)
    COMA            reduce using rule 21 (LIND -> IND .)


state 41

    (22) IND -> CORIZQ . CORDER
    (23) IND -> CORIZQ . expresion_log_relacional CORDER
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    CORDER          shift and go to state 67
    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 68
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 42

    (9) FUNCMAIN -> TIPO_VAR MAIN PARIZQ . PARDER BLOQUE

    PARDER          shift and go to state 69


state 43

    (17) IDDECLA -> IDT IGUAL . expresion_log_relacional
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 70
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 44

    (95) expresion_numerica -> ID .

    MAYQUE          reduce using rule 95 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 95 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 95 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 95 (expresion_numerica -> ID .)
    MAYORIG         reduce using rule 95 (expresion_numerica -> ID .)
    MENORIG         reduce using rule 95 (expresion_numerica -> ID .)
    MAS             reduce using rule 95 (expresion_numerica -> ID .)
    MENOS           reduce using rule 95 (expresion_numerica -> ID .)
    POR             reduce using rule 95 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 95 (expresion_numerica -> ID .)
    RES             reduce using rule 95 (expresion_numerica -> ID .)
    ANDBIT          reduce using rule 95 (expresion_numerica -> ID .)
    ORBIT           reduce using rule 95 (expresion_numerica -> ID .)
    XORBIT          reduce using rule 95 (expresion_numerica -> ID .)
    IZQBIT          reduce using rule 95 (expresion_numerica -> ID .)
    DERBIT          reduce using rule 95 (expresion_numerica -> ID .)
    PTCOMA          reduce using rule 95 (expresion_numerica -> ID .)
    ANDLOG          reduce using rule 95 (expresion_numerica -> ID .)
    ORLOG           reduce using rule 95 (expresion_numerica -> ID .)
    XORLOG          reduce using rule 95 (expresion_numerica -> ID .)
    CORDER          reduce using rule 95 (expresion_numerica -> ID .)
    COMA            reduce using rule 95 (expresion_numerica -> ID .)
    PARDER          reduce using rule 95 (expresion_numerica -> ID .)
    DOSP            reduce using rule 95 (expresion_numerica -> ID .)
    LLAVIZQ         reduce using rule 95 (expresion_numerica -> ID .)
    ID              reduce using rule 95 (expresion_numerica -> ID .)
    PRINT           reduce using rule 95 (expresion_numerica -> ID .)
    GOTO            reduce using rule 95 (expresion_numerica -> ID .)
    SWITCH          reduce using rule 95 (expresion_numerica -> ID .)
    BREAK           reduce using rule 95 (expresion_numerica -> ID .)
    WHILE           reduce using rule 95 (expresion_numerica -> ID .)
    DO              reduce using rule 95 (expresion_numerica -> ID .)
    INT             reduce using rule 95 (expresion_numerica -> ID .)
    DOUBLE          reduce using rule 95 (expresion_numerica -> ID .)
    FLOAT           reduce using rule 95 (expresion_numerica -> ID .)
    CHAR            reduce using rule 95 (expresion_numerica -> ID .)
    VOID            reduce using rule 95 (expresion_numerica -> ID .)
    IF              reduce using rule 95 (expresion_numerica -> ID .)


state 45

    (32) asignacion_instr -> ID TIPO_AS expresion_log_relacional . PTCOMA
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PTCOMA          shift and go to state 71
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74


state 46

    (108) expresion_log_relacional -> expresion_numerica . MAYQUE expresion_numerica
    (109) expresion_log_relacional -> expresion_numerica . MENQUE expresion_numerica
    (110) expresion_log_relacional -> expresion_numerica . IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> expresion_numerica . NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> expresion_numerica . MAYORIG expresion_numerica
    (113) expresion_log_relacional -> expresion_numerica . MENORIG expresion_numerica
    (118) expresion_log_relacional -> expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          shift and go to state 75
    MENQUE          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NIGUALQUE       shift and go to state 78
    MAYORIG         shift and go to state 79
    MENORIG         shift and go to state 80
    PTCOMA          reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    ANDLOG          reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    ORLOG           reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    XORLOG          reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    CORDER          reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    COMA            reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    PARDER          reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    DOSP            reduce using rule 118 (expresion_log_relacional -> expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 47

    (117) expresion_log_relacional -> NOTLOG . expresion_log_relacional
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 91
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 48

    (91) expresion_numerica -> MENOS . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 92
    TIPOCONVERSION                 shift and go to state 58

state 49

    (90) expresion_numerica -> NOTBIT . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 93
    TIPOCONVERSION                 shift and go to state 58

state 50

    (92) expresion_numerica -> PARIZQ . expresion_log_relacional PARDER
    (104) TIPOCONVERSION -> PARIZQ . INT PARDER
    (105) TIPOCONVERSION -> PARIZQ . FLOAT PARDER
    (106) TIPOCONVERSION -> PARIZQ . CHAR PARDER
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    CHAR            shift and go to state 97
    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 94
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 51

    (93) expresion_numerica -> ENTERO .

    MAYQUE          reduce using rule 93 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 93 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 93 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 93 (expresion_numerica -> ENTERO .)
    MAYORIG         reduce using rule 93 (expresion_numerica -> ENTERO .)
    MENORIG         reduce using rule 93 (expresion_numerica -> ENTERO .)
    MAS             reduce using rule 93 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 93 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 93 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 93 (expresion_numerica -> ENTERO .)
    RES             reduce using rule 93 (expresion_numerica -> ENTERO .)
    ANDBIT          reduce using rule 93 (expresion_numerica -> ENTERO .)
    ORBIT           reduce using rule 93 (expresion_numerica -> ENTERO .)
    XORBIT          reduce using rule 93 (expresion_numerica -> ENTERO .)
    IZQBIT          reduce using rule 93 (expresion_numerica -> ENTERO .)
    DERBIT          reduce using rule 93 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 93 (expresion_numerica -> ENTERO .)
    ANDLOG          reduce using rule 93 (expresion_numerica -> ENTERO .)
    ORLOG           reduce using rule 93 (expresion_numerica -> ENTERO .)
    XORLOG          reduce using rule 93 (expresion_numerica -> ENTERO .)
    CORDER          reduce using rule 93 (expresion_numerica -> ENTERO .)
    COMA            reduce using rule 93 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 93 (expresion_numerica -> ENTERO .)
    DOSP            reduce using rule 93 (expresion_numerica -> ENTERO .)
    LLAVIZQ         reduce using rule 93 (expresion_numerica -> ENTERO .)
    ID              reduce using rule 93 (expresion_numerica -> ENTERO .)
    PRINT           reduce using rule 93 (expresion_numerica -> ENTERO .)
    GOTO            reduce using rule 93 (expresion_numerica -> ENTERO .)
    SWITCH          reduce using rule 93 (expresion_numerica -> ENTERO .)
    BREAK           reduce using rule 93 (expresion_numerica -> ENTERO .)
    WHILE           reduce using rule 93 (expresion_numerica -> ENTERO .)
    DO              reduce using rule 93 (expresion_numerica -> ENTERO .)
    INT             reduce using rule 93 (expresion_numerica -> ENTERO .)
    DOUBLE          reduce using rule 93 (expresion_numerica -> ENTERO .)
    FLOAT           reduce using rule 93 (expresion_numerica -> ENTERO .)
    CHAR            reduce using rule 93 (expresion_numerica -> ENTERO .)
    VOID            reduce using rule 93 (expresion_numerica -> ENTERO .)
    IF              reduce using rule 93 (expresion_numerica -> ENTERO .)


state 52

    (94) expresion_numerica -> DECIMAL .

    MAYQUE          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 94 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 94 (expresion_numerica -> DECIMAL .)
    MAYORIG         reduce using rule 94 (expresion_numerica -> DECIMAL .)
    MENORIG         reduce using rule 94 (expresion_numerica -> DECIMAL .)
    MAS             reduce using rule 94 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 94 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 94 (expresion_numerica -> DECIMAL .)
    RES             reduce using rule 94 (expresion_numerica -> DECIMAL .)
    ANDBIT          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    ORBIT           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    XORBIT          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    IZQBIT          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    DERBIT          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    ANDLOG          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    ORLOG           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    XORLOG          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    CORDER          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    COMA            reduce using rule 94 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    DOSP            reduce using rule 94 (expresion_numerica -> DECIMAL .)
    LLAVIZQ         reduce using rule 94 (expresion_numerica -> DECIMAL .)
    ID              reduce using rule 94 (expresion_numerica -> DECIMAL .)
    PRINT           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    GOTO            reduce using rule 94 (expresion_numerica -> DECIMAL .)
    SWITCH          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    BREAK           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    WHILE           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    DO              reduce using rule 94 (expresion_numerica -> DECIMAL .)
    INT             reduce using rule 94 (expresion_numerica -> DECIMAL .)
    DOUBLE          reduce using rule 94 (expresion_numerica -> DECIMAL .)
    FLOAT           reduce using rule 94 (expresion_numerica -> DECIMAL .)
    CHAR            reduce using rule 94 (expresion_numerica -> DECIMAL .)
    VOID            reduce using rule 94 (expresion_numerica -> DECIMAL .)
    IF              reduce using rule 94 (expresion_numerica -> DECIMAL .)


state 53

    (96) expresion_numerica -> CADENA .

    MAYQUE          reduce using rule 96 (expresion_numerica -> CADENA .)
    MENQUE          reduce using rule 96 (expresion_numerica -> CADENA .)
    IGUALQUE        reduce using rule 96 (expresion_numerica -> CADENA .)
    NIGUALQUE       reduce using rule 96 (expresion_numerica -> CADENA .)
    MAYORIG         reduce using rule 96 (expresion_numerica -> CADENA .)
    MENORIG         reduce using rule 96 (expresion_numerica -> CADENA .)
    MAS             reduce using rule 96 (expresion_numerica -> CADENA .)
    MENOS           reduce using rule 96 (expresion_numerica -> CADENA .)
    POR             reduce using rule 96 (expresion_numerica -> CADENA .)
    DIVIDIDO        reduce using rule 96 (expresion_numerica -> CADENA .)
    RES             reduce using rule 96 (expresion_numerica -> CADENA .)
    ANDBIT          reduce using rule 96 (expresion_numerica -> CADENA .)
    ORBIT           reduce using rule 96 (expresion_numerica -> CADENA .)
    XORBIT          reduce using rule 96 (expresion_numerica -> CADENA .)
    IZQBIT          reduce using rule 96 (expresion_numerica -> CADENA .)
    DERBIT          reduce using rule 96 (expresion_numerica -> CADENA .)
    PTCOMA          reduce using rule 96 (expresion_numerica -> CADENA .)
    ANDLOG          reduce using rule 96 (expresion_numerica -> CADENA .)
    ORLOG           reduce using rule 96 (expresion_numerica -> CADENA .)
    XORLOG          reduce using rule 96 (expresion_numerica -> CADENA .)
    CORDER          reduce using rule 96 (expresion_numerica -> CADENA .)
    COMA            reduce using rule 96 (expresion_numerica -> CADENA .)
    PARDER          reduce using rule 96 (expresion_numerica -> CADENA .)
    DOSP            reduce using rule 96 (expresion_numerica -> CADENA .)
    LLAVIZQ         reduce using rule 96 (expresion_numerica -> CADENA .)
    ID              reduce using rule 96 (expresion_numerica -> CADENA .)
    PRINT           reduce using rule 96 (expresion_numerica -> CADENA .)
    GOTO            reduce using rule 96 (expresion_numerica -> CADENA .)
    SWITCH          reduce using rule 96 (expresion_numerica -> CADENA .)
    BREAK           reduce using rule 96 (expresion_numerica -> CADENA .)
    WHILE           reduce using rule 96 (expresion_numerica -> CADENA .)
    DO              reduce using rule 96 (expresion_numerica -> CADENA .)
    INT             reduce using rule 96 (expresion_numerica -> CADENA .)
    DOUBLE          reduce using rule 96 (expresion_numerica -> CADENA .)
    FLOAT           reduce using rule 96 (expresion_numerica -> CADENA .)
    CHAR            reduce using rule 96 (expresion_numerica -> CADENA .)
    VOID            reduce using rule 96 (expresion_numerica -> CADENA .)
    IF              reduce using rule 96 (expresion_numerica -> CADENA .)


state 54

    (97) expresion_numerica -> CADE .

    MAYQUE          reduce using rule 97 (expresion_numerica -> CADE .)
    MENQUE          reduce using rule 97 (expresion_numerica -> CADE .)
    IGUALQUE        reduce using rule 97 (expresion_numerica -> CADE .)
    NIGUALQUE       reduce using rule 97 (expresion_numerica -> CADE .)
    MAYORIG         reduce using rule 97 (expresion_numerica -> CADE .)
    MENORIG         reduce using rule 97 (expresion_numerica -> CADE .)
    MAS             reduce using rule 97 (expresion_numerica -> CADE .)
    MENOS           reduce using rule 97 (expresion_numerica -> CADE .)
    POR             reduce using rule 97 (expresion_numerica -> CADE .)
    DIVIDIDO        reduce using rule 97 (expresion_numerica -> CADE .)
    RES             reduce using rule 97 (expresion_numerica -> CADE .)
    ANDBIT          reduce using rule 97 (expresion_numerica -> CADE .)
    ORBIT           reduce using rule 97 (expresion_numerica -> CADE .)
    XORBIT          reduce using rule 97 (expresion_numerica -> CADE .)
    IZQBIT          reduce using rule 97 (expresion_numerica -> CADE .)
    DERBIT          reduce using rule 97 (expresion_numerica -> CADE .)
    PTCOMA          reduce using rule 97 (expresion_numerica -> CADE .)
    ANDLOG          reduce using rule 97 (expresion_numerica -> CADE .)
    ORLOG           reduce using rule 97 (expresion_numerica -> CADE .)
    XORLOG          reduce using rule 97 (expresion_numerica -> CADE .)
    CORDER          reduce using rule 97 (expresion_numerica -> CADE .)
    COMA            reduce using rule 97 (expresion_numerica -> CADE .)
    PARDER          reduce using rule 97 (expresion_numerica -> CADE .)
    DOSP            reduce using rule 97 (expresion_numerica -> CADE .)
    LLAVIZQ         reduce using rule 97 (expresion_numerica -> CADE .)
    ID              reduce using rule 97 (expresion_numerica -> CADE .)
    PRINT           reduce using rule 97 (expresion_numerica -> CADE .)
    GOTO            reduce using rule 97 (expresion_numerica -> CADE .)
    SWITCH          reduce using rule 97 (expresion_numerica -> CADE .)
    BREAK           reduce using rule 97 (expresion_numerica -> CADE .)
    WHILE           reduce using rule 97 (expresion_numerica -> CADE .)
    DO              reduce using rule 97 (expresion_numerica -> CADE .)
    INT             reduce using rule 97 (expresion_numerica -> CADE .)
    DOUBLE          reduce using rule 97 (expresion_numerica -> CADE .)
    FLOAT           reduce using rule 97 (expresion_numerica -> CADE .)
    CHAR            reduce using rule 97 (expresion_numerica -> CADE .)
    VOID            reduce using rule 97 (expresion_numerica -> CADE .)
    IF              reduce using rule 97 (expresion_numerica -> CADE .)


state 55

    (98) expresion_numerica -> READ . PARIZQ PARDER

    PARIZQ          shift and go to state 98


state 56

    (99) expresion_numerica -> ARRAY . PARIZQ PARDER

    PARIZQ          shift and go to state 99


state 57

    (100) expresion_numerica -> TEMPORAL . ACCESO
    (101) ACCESO -> . ACCESO CORIZQ expresion_numerica CORDER
    (102) ACCESO -> . CORIZQ expresion_numerica CORDER

    CORIZQ          shift and go to state 101

    ACCESO                         shift and go to state 100

state 58

    (103) expresion_numerica -> TIPOCONVERSION . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    TIPOCONVERSION                 shift and go to state 58
    expresion_numerica             shift and go to state 102

state 59

    (107) expresion_numerica -> ABS . PARIZQ expresion_numerica PARDER

    PARIZQ          shift and go to state 103


state 60

    (24) STRUCTDEF -> STRUCT ID LLAVIZQ . IDSTRUCT LLAVDER PTCOMA
    (25) IDSTRUCT -> . IDSTRUCT TIPO_VAR ID PTCOMA
    (26) IDSTRUCT -> . TIPO_VAR ID PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    IDSTRUCT                       shift and go to state 104
    TIPO_VAR                       shift and go to state 105

state 61

    (14) LISTAID -> LISTAID COMA IDDECLA .

    PTCOMA          reduce using rule 14 (LISTAID -> LISTAID COMA IDDECLA .)
    COMA            reduce using rule 14 (LISTAID -> LISTAID COMA IDDECLA .)


state 62

    (18) IDT -> ID .
    (19) IDT -> ID . LIND
    (20) LIND -> . LIND IND
    (21) LIND -> . IND
    (22) IND -> . CORIZQ CORDER
    (23) IND -> . CORIZQ expresion_log_relacional CORDER

    IGUAL           reduce using rule 18 (IDT -> ID .)
    PTCOMA          reduce using rule 18 (IDT -> ID .)
    COMA            reduce using rule 18 (IDT -> ID .)
    CORIZQ          shift and go to state 41

    LIND                           shift and go to state 39
    IND                            shift and go to state 40

state 63

    (47) PARAMETRO -> TIPO_VAR . ID

    ID              shift and go to state 106


state 64

    (44) FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS . PARDER BLOQUE
    (45) PARAMETROS -> PARAMETROS . COMA PARAMETRO

    PARDER          shift and go to state 107
    COMA            shift and go to state 108


state 65

    (46) PARAMETROS -> PARAMETRO .

    PARDER          reduce using rule 46 (PARAMETROS -> PARAMETRO .)
    COMA            reduce using rule 46 (PARAMETROS -> PARAMETRO .)


state 66

    (20) LIND -> LIND IND .

    CORIZQ          reduce using rule 20 (LIND -> LIND IND .)
    IGUAL           reduce using rule 20 (LIND -> LIND IND .)
    PTCOMA          reduce using rule 20 (LIND -> LIND IND .)
    COMA            reduce using rule 20 (LIND -> LIND IND .)


state 67

    (22) IND -> CORIZQ CORDER .

    CORIZQ          reduce using rule 22 (IND -> CORIZQ CORDER .)
    IGUAL           reduce using rule 22 (IND -> CORIZQ CORDER .)
    PTCOMA          reduce using rule 22 (IND -> CORIZQ CORDER .)
    COMA            reduce using rule 22 (IND -> CORIZQ CORDER .)


state 68

    (23) IND -> CORIZQ expresion_log_relacional . CORDER
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    CORDER          shift and go to state 109
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74


state 69

    (9) FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER . BLOQUE
    (49) BLOQUE -> . LLAVIZQ SENTENCIAS LLAVDER
    (50) BLOQUE -> . SENTENCIAS
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVIZQ         shift and go to state 112
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    TIPO_VAR                       shift and go to state 110
    BLOQUE                         shift and go to state 111
    SENTENCIAS                     shift and go to state 113
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    if_instr                       shift and go to state 128

state 70

    (17) IDDECLA -> IDT IGUAL expresion_log_relacional .
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PTCOMA          reduce using rule 17 (IDDECLA -> IDT IGUAL expresion_log_relacional .)
    COMA            reduce using rule 17 (IDDECLA -> IDT IGUAL expresion_log_relacional .)
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74


state 71

    (32) asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .

    ID              reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    STRUCT          reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    INT             reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    DOUBLE          reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    FLOAT           reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    CHAR            reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    VOID            reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    $end            reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    PRINT           reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    GOTO            reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    SWITCH          reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    BREAK           reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    WHILE           reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    DO              reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    IF              reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    LLAVDER         reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    ELSE            reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    CASE            reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)
    DEFAULT         reduce using rule 32 (asignacion_instr -> ID TIPO_AS expresion_log_relacional PTCOMA .)


state 72

    (114) expresion_log_relacional -> expresion_log_relacional ANDLOG . expresion_log_relacional
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 134
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 73

    (115) expresion_log_relacional -> expresion_log_relacional ORLOG . expresion_log_relacional
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 135
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 74

    (116) expresion_log_relacional -> expresion_log_relacional XORLOG . expresion_log_relacional
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 136
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 75

    (108) expresion_log_relacional -> expresion_numerica MAYQUE . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 137
    TIPOCONVERSION                 shift and go to state 58

state 76

    (109) expresion_log_relacional -> expresion_numerica MENQUE . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 138
    TIPOCONVERSION                 shift and go to state 58

state 77

    (110) expresion_log_relacional -> expresion_numerica IGUALQUE . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 139
    TIPOCONVERSION                 shift and go to state 58

state 78

    (111) expresion_log_relacional -> expresion_numerica NIGUALQUE . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 140
    TIPOCONVERSION                 shift and go to state 58

state 79

    (112) expresion_log_relacional -> expresion_numerica MAYORIG . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 141
    TIPOCONVERSION                 shift and go to state 58

state 80

    (113) expresion_log_relacional -> expresion_numerica MENORIG . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 142
    TIPOCONVERSION                 shift and go to state 58

state 81

    (80) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 143
    TIPOCONVERSION                 shift and go to state 58

state 82

    (81) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 144
    TIPOCONVERSION                 shift and go to state 58

state 83

    (82) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 145
    TIPOCONVERSION                 shift and go to state 58

state 84

    (83) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 146
    TIPOCONVERSION                 shift and go to state 58

state 85

    (84) expresion_numerica -> expresion_numerica RES . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 147
    TIPOCONVERSION                 shift and go to state 58

state 86

    (85) expresion_numerica -> expresion_numerica ANDBIT . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 148
    TIPOCONVERSION                 shift and go to state 58

state 87

    (86) expresion_numerica -> expresion_numerica ORBIT . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 149
    TIPOCONVERSION                 shift and go to state 58

state 88

    (87) expresion_numerica -> expresion_numerica XORBIT . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 150
    TIPOCONVERSION                 shift and go to state 58

state 89

    (88) expresion_numerica -> expresion_numerica IZQBIT . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 151
    TIPOCONVERSION                 shift and go to state 58

state 90

    (89) expresion_numerica -> expresion_numerica DERBIT . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 152
    TIPOCONVERSION                 shift and go to state 58

state 91

    (117) expresion_log_relacional -> NOTLOG expresion_log_relacional .
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PTCOMA          reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .)
    CORDER          reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .)
    COMA            reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .)
    PARDER          reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .)
    DOSP            reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .)
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74

  ! ANDLOG          [ reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .) ]
  ! ORLOG           [ reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .) ]
  ! XORLOG          [ reduce using rule 117 (expresion_log_relacional -> NOTLOG expresion_log_relacional .) ]


state 92

    (91) expresion_numerica -> MENOS expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    MAYORIG         reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    MENORIG         reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    MAS             reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    RES             reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    ANDBIT          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    ORBIT           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    XORBIT          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    IZQBIT          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    DERBIT          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    ANDLOG          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    ORLOG           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    XORLOG          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    CORDER          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    COMA            reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    DOSP            reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    LLAVIZQ         reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    ID              reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    PRINT           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    GOTO            reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    SWITCH          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    BREAK           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    WHILE           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    DO              reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    INT             reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    DOUBLE          reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    FLOAT           reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    CHAR            reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    VOID            reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)
    IF              reduce using rule 91 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! POR             [ shift and go to state 83 ]
  ! DIVIDIDO        [ shift and go to state 84 ]
  ! RES             [ shift and go to state 85 ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 93

    (90) expresion_numerica -> NOTBIT expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    MENQUE          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    IGUALQUE        reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    NIGUALQUE       reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    MAYORIG         reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    MENORIG         reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    PTCOMA          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    ANDLOG          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    ORLOG           reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    XORLOG          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    CORDER          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    COMA            reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    PARDER          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    DOSP            reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    LLAVIZQ         reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    ID              reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    PRINT           reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    GOTO            reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    SWITCH          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    BREAK           reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    WHILE           reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    DO              reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    INT             reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    DOUBLE          reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    FLOAT           reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    CHAR            reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    VOID            reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    IF              reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90

  ! MAS             [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! MENOS           [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! POR             [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! RES             [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! ANDBIT          [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! ORBIT           [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! XORBIT          [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! IZQBIT          [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]
  ! DERBIT          [ reduce using rule 90 (expresion_numerica -> NOTBIT expresion_numerica .) ]


state 94

    (92) expresion_numerica -> PARIZQ expresion_log_relacional . PARDER
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PARDER          shift and go to state 153
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74


state 95

    (104) TIPOCONVERSION -> PARIZQ INT . PARDER

    PARDER          shift and go to state 154


state 96

    (105) TIPOCONVERSION -> PARIZQ FLOAT . PARDER

    PARDER          shift and go to state 155


state 97

    (106) TIPOCONVERSION -> PARIZQ CHAR . PARDER

    PARDER          shift and go to state 156


state 98

    (98) expresion_numerica -> READ PARIZQ . PARDER

    PARDER          shift and go to state 157


state 99

    (99) expresion_numerica -> ARRAY PARIZQ . PARDER

    PARDER          shift and go to state 158


state 100

    (100) expresion_numerica -> TEMPORAL ACCESO .
    (101) ACCESO -> ACCESO . CORIZQ expresion_numerica CORDER

    MAYQUE          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    MENQUE          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    IGUALQUE        reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    NIGUALQUE       reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    MAYORIG         reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    MENORIG         reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    MAS             reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    MENOS           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    POR             reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    DIVIDIDO        reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    RES             reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    ANDBIT          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    ORBIT           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    XORBIT          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    IZQBIT          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    DERBIT          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    PTCOMA          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    ANDLOG          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    ORLOG           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    XORLOG          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    CORDER          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    COMA            reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    PARDER          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    DOSP            reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    LLAVIZQ         reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    ID              reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    PRINT           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    GOTO            reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    SWITCH          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    BREAK           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    WHILE           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    DO              reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    INT             reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    DOUBLE          reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    FLOAT           reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    CHAR            reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    VOID            reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    IF              reduce using rule 100 (expresion_numerica -> TEMPORAL ACCESO .)
    CORIZQ          shift and go to state 159


state 101

    (102) ACCESO -> CORIZQ . expresion_numerica CORDER
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 160
    TIPOCONVERSION                 shift and go to state 58

state 102

    (103) expresion_numerica -> TIPOCONVERSION expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RES resolved as shift
  ! shift/reduce conflict for ANDBIT resolved as shift
  ! shift/reduce conflict for ORBIT resolved as shift
  ! shift/reduce conflict for XORBIT resolved as shift
  ! shift/reduce conflict for IZQBIT resolved as shift
  ! shift/reduce conflict for DERBIT resolved as shift
    MAYQUE          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    MENQUE          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    IGUALQUE        reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    NIGUALQUE       reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    MAYORIG         reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    MENORIG         reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    PTCOMA          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    ANDLOG          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    ORLOG           reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    XORLOG          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    CORDER          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    COMA            reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    PARDER          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    DOSP            reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    LLAVIZQ         reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    ID              reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    PRINT           reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    GOTO            reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    SWITCH          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    BREAK           reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    WHILE           reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    DO              reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    INT             reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    DOUBLE          reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    FLOAT           reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    CHAR            reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    VOID            reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    IF              reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90

  ! MAS             [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! MENOS           [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! POR             [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! RES             [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! ANDBIT          [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! ORBIT           [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! XORBIT          [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! IZQBIT          [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]
  ! DERBIT          [ reduce using rule 103 (expresion_numerica -> TIPOCONVERSION expresion_numerica .) ]


state 103

    (107) expresion_numerica -> ABS PARIZQ . expresion_numerica PARDER
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 161
    TIPOCONVERSION                 shift and go to state 58

state 104

    (24) STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT . LLAVDER PTCOMA
    (25) IDSTRUCT -> IDSTRUCT . TIPO_VAR ID PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    LLAVDER         shift and go to state 162
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    TIPO_VAR                       shift and go to state 163

state 105

    (26) IDSTRUCT -> TIPO_VAR . ID PTCOMA

    ID              shift and go to state 164


state 106

    (47) PARAMETRO -> TIPO_VAR ID .

    PARDER          reduce using rule 47 (PARAMETRO -> TIPO_VAR ID .)
    COMA            reduce using rule 47 (PARAMETRO -> TIPO_VAR ID .)


state 107

    (44) FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER . BLOQUE
    (49) BLOQUE -> . LLAVIZQ SENTENCIAS LLAVDER
    (50) BLOQUE -> . SENTENCIAS
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVIZQ         shift and go to state 112
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    TIPO_VAR                       shift and go to state 110
    BLOQUE                         shift and go to state 165
    SENTENCIAS                     shift and go to state 113
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    if_instr                       shift and go to state 128

state 108

    (45) PARAMETROS -> PARAMETROS COMA . PARAMETRO
    (47) PARAMETRO -> . TIPO_VAR ID
    (48) PARAMETRO -> .
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    PARDER          reduce using rule 48 (PARAMETRO -> .)
    COMA            reduce using rule 48 (PARAMETRO -> .)
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    PARAMETRO                      shift and go to state 166
    TIPO_VAR                       shift and go to state 63

state 109

    (23) IND -> CORIZQ expresion_log_relacional CORDER .

    CORIZQ          reduce using rule 23 (IND -> CORIZQ expresion_log_relacional CORDER .)
    IGUAL           reduce using rule 23 (IND -> CORIZQ expresion_log_relacional CORDER .)
    PTCOMA          reduce using rule 23 (IND -> CORIZQ expresion_log_relacional CORDER .)
    COMA            reduce using rule 23 (IND -> CORIZQ expresion_log_relacional CORDER .)


state 110

    (13) definicion_instr -> TIPO_VAR . LISTAID PTCOMA
    (14) LISTAID -> . LISTAID COMA IDDECLA
    (15) LISTAID -> . IDDECLA
    (16) IDDECLA -> . IDT
    (17) IDDECLA -> . IDT IGUAL expresion_log_relacional
    (18) IDT -> . ID
    (19) IDT -> . ID LIND

    ID              shift and go to state 62

    LISTAID                        shift and go to state 18
    IDDECLA                        shift and go to state 21
    IDT                            shift and go to state 22

state 111

    (9) FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .

    ID              reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    STRUCT          reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    INT             reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    DOUBLE          reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    FLOAT           reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    CHAR            reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    VOID            reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)
    $end            reduce using rule 9 (FUNCMAIN -> TIPO_VAR MAIN PARIZQ PARDER BLOQUE .)


state 112

    (49) BLOQUE -> LLAVIZQ . SENTENCIAS LLAVDER
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIAS                     shift and go to state 167
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 113

    (50) BLOQUE -> SENTENCIAS .
    (51) SENTENCIAS -> SENTENCIAS . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    STRUCT          reduce using rule 50 (BLOQUE -> SENTENCIAS .)
    $end            reduce using rule 50 (BLOQUE -> SENTENCIAS .)
    LLAVDER         reduce using rule 50 (BLOQUE -> SENTENCIAS .)
    ELSE            reduce using rule 50 (BLOQUE -> SENTENCIAS .)
    CASE            reduce using rule 50 (BLOQUE -> SENTENCIAS .)
    DEFAULT         reduce using rule 50 (BLOQUE -> SENTENCIAS .)
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

  ! ID              [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! INT             [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! DOUBLE          [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! FLOAT           [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! CHAR            [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! VOID            [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! PRINT           [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! GOTO            [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! SWITCH          [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! BREAK           [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! WHILE           [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! DO              [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]
  ! IF              [ reduce using rule 50 (BLOQUE -> SENTENCIAS .) ]

    SENTENCIA                      shift and go to state 168
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 114

    (52) SENTENCIAS -> SENTENCIA .

    ID              reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    PRINT           reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    GOTO            reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    SWITCH          reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    BREAK           reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    WHILE           reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    DO              reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    INT             reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    DOUBLE          reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    FLOAT           reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    CHAR            reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    VOID            reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    IF              reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    STRUCT          reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    $end            reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    LLAVDER         reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    ELSE            reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    CASE            reduce using rule 52 (SENTENCIAS -> SENTENCIA .)
    DEFAULT         reduce using rule 52 (SENTENCIAS -> SENTENCIA .)


state 115

    (53) SENTENCIA -> definicion_instr .

    ID              reduce using rule 53 (SENTENCIA -> definicion_instr .)
    PRINT           reduce using rule 53 (SENTENCIA -> definicion_instr .)
    GOTO            reduce using rule 53 (SENTENCIA -> definicion_instr .)
    SWITCH          reduce using rule 53 (SENTENCIA -> definicion_instr .)
    BREAK           reduce using rule 53 (SENTENCIA -> definicion_instr .)
    WHILE           reduce using rule 53 (SENTENCIA -> definicion_instr .)
    DO              reduce using rule 53 (SENTENCIA -> definicion_instr .)
    INT             reduce using rule 53 (SENTENCIA -> definicion_instr .)
    DOUBLE          reduce using rule 53 (SENTENCIA -> definicion_instr .)
    FLOAT           reduce using rule 53 (SENTENCIA -> definicion_instr .)
    CHAR            reduce using rule 53 (SENTENCIA -> definicion_instr .)
    VOID            reduce using rule 53 (SENTENCIA -> definicion_instr .)
    IF              reduce using rule 53 (SENTENCIA -> definicion_instr .)
    STRUCT          reduce using rule 53 (SENTENCIA -> definicion_instr .)
    $end            reduce using rule 53 (SENTENCIA -> definicion_instr .)
    LLAVDER         reduce using rule 53 (SENTENCIA -> definicion_instr .)
    ELSE            reduce using rule 53 (SENTENCIA -> definicion_instr .)
    CASE            reduce using rule 53 (SENTENCIA -> definicion_instr .)
    DEFAULT         reduce using rule 53 (SENTENCIA -> definicion_instr .)


state 116

    (54) SENTENCIA -> asignacion_instr .

    ID              reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    PRINT           reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    GOTO            reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    SWITCH          reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    BREAK           reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    WHILE           reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    DO              reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    INT             reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    DOUBLE          reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    FLOAT           reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    CHAR            reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    VOID            reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    IF              reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    STRUCT          reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    $end            reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    LLAVDER         reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    ELSE            reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    CASE            reduce using rule 54 (SENTENCIA -> asignacion_instr .)
    DEFAULT         reduce using rule 54 (SENTENCIA -> asignacion_instr .)


state 117

    (55) SENTENCIA -> imprimir_instr .

    ID              reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    PRINT           reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    GOTO            reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    SWITCH          reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    BREAK           reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    WHILE           reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    DO              reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    INT             reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    DOUBLE          reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    FLOAT           reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    CHAR            reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    VOID            reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    IF              reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    STRUCT          reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    $end            reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    LLAVDER         reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    ELSE            reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    CASE            reduce using rule 55 (SENTENCIA -> imprimir_instr .)
    DEFAULT         reduce using rule 55 (SENTENCIA -> imprimir_instr .)


state 118

    (56) SENTENCIA -> DEFINEL .

    ID              reduce using rule 56 (SENTENCIA -> DEFINEL .)
    PRINT           reduce using rule 56 (SENTENCIA -> DEFINEL .)
    GOTO            reduce using rule 56 (SENTENCIA -> DEFINEL .)
    SWITCH          reduce using rule 56 (SENTENCIA -> DEFINEL .)
    BREAK           reduce using rule 56 (SENTENCIA -> DEFINEL .)
    WHILE           reduce using rule 56 (SENTENCIA -> DEFINEL .)
    DO              reduce using rule 56 (SENTENCIA -> DEFINEL .)
    INT             reduce using rule 56 (SENTENCIA -> DEFINEL .)
    DOUBLE          reduce using rule 56 (SENTENCIA -> DEFINEL .)
    FLOAT           reduce using rule 56 (SENTENCIA -> DEFINEL .)
    CHAR            reduce using rule 56 (SENTENCIA -> DEFINEL .)
    VOID            reduce using rule 56 (SENTENCIA -> DEFINEL .)
    IF              reduce using rule 56 (SENTENCIA -> DEFINEL .)
    STRUCT          reduce using rule 56 (SENTENCIA -> DEFINEL .)
    $end            reduce using rule 56 (SENTENCIA -> DEFINEL .)
    LLAVDER         reduce using rule 56 (SENTENCIA -> DEFINEL .)
    ELSE            reduce using rule 56 (SENTENCIA -> DEFINEL .)
    CASE            reduce using rule 56 (SENTENCIA -> DEFINEL .)
    DEFAULT         reduce using rule 56 (SENTENCIA -> DEFINEL .)


state 119

    (57) SENTENCIA -> DEFINEGOTO .

    ID              reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    PRINT           reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    GOTO            reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    SWITCH          reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    BREAK           reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    WHILE           reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    DO              reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    INT             reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    DOUBLE          reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    FLOAT           reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    CHAR            reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    VOID            reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    IF              reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    STRUCT          reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    $end            reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    LLAVDER         reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    ELSE            reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    CASE            reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)
    DEFAULT         reduce using rule 57 (SENTENCIA -> DEFINEGOTO .)


state 120

    (58) SENTENCIA -> IFFUN .

    ID              reduce using rule 58 (SENTENCIA -> IFFUN .)
    PRINT           reduce using rule 58 (SENTENCIA -> IFFUN .)
    GOTO            reduce using rule 58 (SENTENCIA -> IFFUN .)
    SWITCH          reduce using rule 58 (SENTENCIA -> IFFUN .)
    BREAK           reduce using rule 58 (SENTENCIA -> IFFUN .)
    WHILE           reduce using rule 58 (SENTENCIA -> IFFUN .)
    DO              reduce using rule 58 (SENTENCIA -> IFFUN .)
    INT             reduce using rule 58 (SENTENCIA -> IFFUN .)
    DOUBLE          reduce using rule 58 (SENTENCIA -> IFFUN .)
    FLOAT           reduce using rule 58 (SENTENCIA -> IFFUN .)
    CHAR            reduce using rule 58 (SENTENCIA -> IFFUN .)
    VOID            reduce using rule 58 (SENTENCIA -> IFFUN .)
    IF              reduce using rule 58 (SENTENCIA -> IFFUN .)
    STRUCT          reduce using rule 58 (SENTENCIA -> IFFUN .)
    $end            reduce using rule 58 (SENTENCIA -> IFFUN .)
    LLAVDER         reduce using rule 58 (SENTENCIA -> IFFUN .)
    ELSE            reduce using rule 58 (SENTENCIA -> IFFUN .)
    CASE            reduce using rule 58 (SENTENCIA -> IFFUN .)
    DEFAULT         reduce using rule 58 (SENTENCIA -> IFFUN .)


state 121

    (59) SENTENCIA -> SWITCHFUN .

    ID              reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    PRINT           reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    GOTO            reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    SWITCH          reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    BREAK           reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    WHILE           reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    DO              reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    INT             reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    DOUBLE          reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    FLOAT           reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    CHAR            reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    VOID            reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    IF              reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    STRUCT          reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    $end            reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    LLAVDER         reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    ELSE            reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    CASE            reduce using rule 59 (SENTENCIA -> SWITCHFUN .)
    DEFAULT         reduce using rule 59 (SENTENCIA -> SWITCHFUN .)


state 122

    (60) SENTENCIA -> BREAKF .

    ID              reduce using rule 60 (SENTENCIA -> BREAKF .)
    PRINT           reduce using rule 60 (SENTENCIA -> BREAKF .)
    GOTO            reduce using rule 60 (SENTENCIA -> BREAKF .)
    SWITCH          reduce using rule 60 (SENTENCIA -> BREAKF .)
    BREAK           reduce using rule 60 (SENTENCIA -> BREAKF .)
    WHILE           reduce using rule 60 (SENTENCIA -> BREAKF .)
    DO              reduce using rule 60 (SENTENCIA -> BREAKF .)
    INT             reduce using rule 60 (SENTENCIA -> BREAKF .)
    DOUBLE          reduce using rule 60 (SENTENCIA -> BREAKF .)
    FLOAT           reduce using rule 60 (SENTENCIA -> BREAKF .)
    CHAR            reduce using rule 60 (SENTENCIA -> BREAKF .)
    VOID            reduce using rule 60 (SENTENCIA -> BREAKF .)
    IF              reduce using rule 60 (SENTENCIA -> BREAKF .)
    STRUCT          reduce using rule 60 (SENTENCIA -> BREAKF .)
    $end            reduce using rule 60 (SENTENCIA -> BREAKF .)
    LLAVDER         reduce using rule 60 (SENTENCIA -> BREAKF .)
    ELSE            reduce using rule 60 (SENTENCIA -> BREAKF .)
    CASE            reduce using rule 60 (SENTENCIA -> BREAKF .)
    DEFAULT         reduce using rule 60 (SENTENCIA -> BREAKF .)


state 123

    (61) SENTENCIA -> WHILEF .

    ID              reduce using rule 61 (SENTENCIA -> WHILEF .)
    PRINT           reduce using rule 61 (SENTENCIA -> WHILEF .)
    GOTO            reduce using rule 61 (SENTENCIA -> WHILEF .)
    SWITCH          reduce using rule 61 (SENTENCIA -> WHILEF .)
    BREAK           reduce using rule 61 (SENTENCIA -> WHILEF .)
    WHILE           reduce using rule 61 (SENTENCIA -> WHILEF .)
    DO              reduce using rule 61 (SENTENCIA -> WHILEF .)
    INT             reduce using rule 61 (SENTENCIA -> WHILEF .)
    DOUBLE          reduce using rule 61 (SENTENCIA -> WHILEF .)
    FLOAT           reduce using rule 61 (SENTENCIA -> WHILEF .)
    CHAR            reduce using rule 61 (SENTENCIA -> WHILEF .)
    VOID            reduce using rule 61 (SENTENCIA -> WHILEF .)
    IF              reduce using rule 61 (SENTENCIA -> WHILEF .)
    STRUCT          reduce using rule 61 (SENTENCIA -> WHILEF .)
    $end            reduce using rule 61 (SENTENCIA -> WHILEF .)
    LLAVDER         reduce using rule 61 (SENTENCIA -> WHILEF .)
    ELSE            reduce using rule 61 (SENTENCIA -> WHILEF .)
    CASE            reduce using rule 61 (SENTENCIA -> WHILEF .)
    DEFAULT         reduce using rule 61 (SENTENCIA -> WHILEF .)


state 124

    (62) SENTENCIA -> DOFUN .

    ID              reduce using rule 62 (SENTENCIA -> DOFUN .)
    PRINT           reduce using rule 62 (SENTENCIA -> DOFUN .)
    GOTO            reduce using rule 62 (SENTENCIA -> DOFUN .)
    SWITCH          reduce using rule 62 (SENTENCIA -> DOFUN .)
    BREAK           reduce using rule 62 (SENTENCIA -> DOFUN .)
    WHILE           reduce using rule 62 (SENTENCIA -> DOFUN .)
    DO              reduce using rule 62 (SENTENCIA -> DOFUN .)
    INT             reduce using rule 62 (SENTENCIA -> DOFUN .)
    DOUBLE          reduce using rule 62 (SENTENCIA -> DOFUN .)
    FLOAT           reduce using rule 62 (SENTENCIA -> DOFUN .)
    CHAR            reduce using rule 62 (SENTENCIA -> DOFUN .)
    VOID            reduce using rule 62 (SENTENCIA -> DOFUN .)
    IF              reduce using rule 62 (SENTENCIA -> DOFUN .)
    STRUCT          reduce using rule 62 (SENTENCIA -> DOFUN .)
    $end            reduce using rule 62 (SENTENCIA -> DOFUN .)
    LLAVDER         reduce using rule 62 (SENTENCIA -> DOFUN .)
    ELSE            reduce using rule 62 (SENTENCIA -> DOFUN .)
    CASE            reduce using rule 62 (SENTENCIA -> DOFUN .)
    DEFAULT         reduce using rule 62 (SENTENCIA -> DOFUN .)


state 125

    (32) asignacion_instr -> ID . TIPO_AS expresion_log_relacional PTCOMA
    (10) DEFINEL -> ID . DOSP
    (33) TIPO_AS -> . IGUAL
    (34) TIPO_AS -> . MASIGUAL
    (35) TIPO_AS -> . MENOSIGUAL
    (36) TIPO_AS -> . PORIGUAL
    (37) TIPO_AS -> . DIVIGUAL
    (38) TIPO_AS -> . RESIGUAL
    (39) TIPO_AS -> . IZQIGUAL
    (40) TIPO_AS -> . DERIGUAL
    (41) TIPO_AS -> . ANDIGUAL
    (42) TIPO_AS -> . NOTIGUAL
    (43) TIPO_AS -> . ORIGUAL

    DOSP            shift and go to state 169
    IGUAL           shift and go to state 24
    MASIGUAL        shift and go to state 25
    MENOSIGUAL      shift and go to state 26
    PORIGUAL        shift and go to state 27
    DIVIGUAL        shift and go to state 28
    RESIGUAL        shift and go to state 29
    IZQIGUAL        shift and go to state 30
    DERIGUAL        shift and go to state 31
    ANDIGUAL        shift and go to state 32
    NOTIGUAL        shift and go to state 33
    ORIGUAL         shift and go to state 34

    TIPO_AS                        shift and go to state 23

state 126

    (12) imprimir_instr -> PRINT . PARIZQ expresion_log_relacional PARDER PTCOMA

    PARIZQ          shift and go to state 170


state 127

    (11) DEFINEGOTO -> GOTO . ID PTCOMA

    ID              shift and go to state 171


state 128

    (71) IFFUN -> if_instr .
    (72) IFFUN -> if_instr . LISTA_ELSEIF
    (73) IFFUN -> if_instr . LISTA_ELSEIF else_instr
    (74) IFFUN -> if_instr . else_instr
    (76) LISTA_ELSEIF -> . LISTA_ELSEIF if_else_instr
    (77) LISTA_ELSEIF -> . if_else_instr
    (79) else_instr -> . ELSE BLOQUE
    (78) if_else_instr -> . ELSE if_instr

  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 71 (IFFUN -> if_instr .)
    PRINT           reduce using rule 71 (IFFUN -> if_instr .)
    GOTO            reduce using rule 71 (IFFUN -> if_instr .)
    SWITCH          reduce using rule 71 (IFFUN -> if_instr .)
    BREAK           reduce using rule 71 (IFFUN -> if_instr .)
    WHILE           reduce using rule 71 (IFFUN -> if_instr .)
    DO              reduce using rule 71 (IFFUN -> if_instr .)
    INT             reduce using rule 71 (IFFUN -> if_instr .)
    DOUBLE          reduce using rule 71 (IFFUN -> if_instr .)
    FLOAT           reduce using rule 71 (IFFUN -> if_instr .)
    CHAR            reduce using rule 71 (IFFUN -> if_instr .)
    VOID            reduce using rule 71 (IFFUN -> if_instr .)
    IF              reduce using rule 71 (IFFUN -> if_instr .)
    STRUCT          reduce using rule 71 (IFFUN -> if_instr .)
    $end            reduce using rule 71 (IFFUN -> if_instr .)
    LLAVDER         reduce using rule 71 (IFFUN -> if_instr .)
    CASE            reduce using rule 71 (IFFUN -> if_instr .)
    DEFAULT         reduce using rule 71 (IFFUN -> if_instr .)
    ELSE            shift and go to state 175

  ! ELSE            [ reduce using rule 71 (IFFUN -> if_instr .) ]

    LISTA_ELSEIF                   shift and go to state 172
    else_instr                     shift and go to state 173
    if_else_instr                  shift and go to state 174

state 129

    (65) SWITCHFUN -> SWITCH . expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 176
    TIPOCONVERSION                 shift and go to state 58

state 130

    (70) BREAKF -> BREAK . PTCOMA

    PTCOMA          shift and go to state 177


state 131

    (64) WHILEF -> WHILE . expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 178
    TIPOCONVERSION                 shift and go to state 58

state 132

    (63) DOFUN -> DO . LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA

    LLAVIZQ         shift and go to state 179


state 133

    (75) if_instr -> IF . expresion_numerica BLOQUE
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 180
    TIPOCONVERSION                 shift and go to state 58

state 134

    (114) expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PTCOMA          reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    ANDLOG          reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    ORLOG           reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    XORLOG          reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    CORDER          reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    COMA            reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    PARDER          reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)
    DOSP            reduce using rule 114 (expresion_log_relacional -> expresion_log_relacional ANDLOG expresion_log_relacional .)

  ! ANDLOG          [ shift and go to state 72 ]
  ! ORLOG           [ shift and go to state 73 ]
  ! XORLOG          [ shift and go to state 74 ]


state 135

    (115) expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PTCOMA          reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    ANDLOG          reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    ORLOG           reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    XORLOG          reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    CORDER          reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    COMA            reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    PARDER          reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)
    DOSP            reduce using rule 115 (expresion_log_relacional -> expresion_log_relacional ORLOG expresion_log_relacional .)

  ! ANDLOG          [ shift and go to state 72 ]
  ! ORLOG           [ shift and go to state 73 ]
  ! XORLOG          [ shift and go to state 74 ]


state 136

    (116) expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PTCOMA          reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    ANDLOG          reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    ORLOG           reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    XORLOG          reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    CORDER          reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    COMA            reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    PARDER          reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)
    DOSP            reduce using rule 116 (expresion_log_relacional -> expresion_log_relacional XORLOG expresion_log_relacional .)

  ! ANDLOG          [ shift and go to state 72 ]
  ! ORLOG           [ shift and go to state 73 ]
  ! XORLOG          [ shift and go to state 74 ]


state 137

    (108) expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    ANDLOG          reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    ORLOG           reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    XORLOG          reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    CORDER          reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    COMA            reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    PARDER          reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    DOSP            reduce using rule 108 (expresion_log_relacional -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 138

    (109) expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    ANDLOG          reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    ORLOG           reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    XORLOG          reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    CORDER          reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    COMA            reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    PARDER          reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    DOSP            reduce using rule 109 (expresion_log_relacional -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 139

    (110) expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    ANDLOG          reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    ORLOG           reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    XORLOG          reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    CORDER          reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    COMA            reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    PARDER          reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    DOSP            reduce using rule 110 (expresion_log_relacional -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 140

    (111) expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    ANDLOG          reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    ORLOG           reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    XORLOG          reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    CORDER          reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    COMA            reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    PARDER          reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    DOSP            reduce using rule 111 (expresion_log_relacional -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 141

    (112) expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    ANDLOG          reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    ORLOG           reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    XORLOG          reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    CORDER          reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    COMA            reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    PARDER          reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    DOSP            reduce using rule 112 (expresion_log_relacional -> expresion_numerica MAYORIG expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 142

    (113) expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    ANDLOG          reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    ORLOG           reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    XORLOG          reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    CORDER          reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    COMA            reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    PARDER          reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    DOSP            reduce using rule 113 (expresion_log_relacional -> expresion_numerica MENORIG expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 143

    (80) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYORIG         reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENORIG         reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAS             reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ANDBIT          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ORBIT           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    XORBIT          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IZQBIT          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    DERBIT          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ANDLOG          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ORLOG           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    XORLOG          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CORDER          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    COMA            reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    DOSP            reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    LLAVIZQ         reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ID              reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PRINT           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    GOTO            reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    SWITCH          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    BREAK           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    WHILE           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    DO              reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    INT             reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    DOUBLE          reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    FLOAT           reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CHAR            reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    VOID            reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IF              reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85

  ! POR             [ reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! RES             [ reduce using rule 80 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 144

    (81) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYORIG         reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENORIG         reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAS             reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ANDBIT          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ORBIT           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    XORBIT          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IZQBIT          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    DERBIT          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ANDLOG          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ORLOG           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    XORLOG          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CORDER          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    COMA            reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    DOSP            reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    LLAVIZQ         reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ID              reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PRINT           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    GOTO            reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    SWITCH          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    BREAK           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    WHILE           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    DO              reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    INT             reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    DOUBLE          reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    FLOAT           reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CHAR            reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    VOID            reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IF              reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85

  ! POR             [ reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! RES             [ reduce using rule 81 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 145

    (82) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYORIG         reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENORIG         reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAS             reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ANDBIT          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ORBIT           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    XORBIT          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IZQBIT          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DERBIT          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ANDLOG          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ORLOG           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    XORLOG          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CORDER          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    COMA            reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DOSP            reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    LLAVIZQ         reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ID              reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PRINT           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    GOTO            reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    SWITCH          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    BREAK           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    WHILE           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DO              reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    INT             reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DOUBLE          reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    FLOAT           reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CHAR            reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    VOID            reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IF              reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    RES             shift and go to state 85

  ! RES             [ reduce using rule 82 (expresion_numerica -> expresion_numerica POR expresion_numerica .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! POR             [ shift and go to state 83 ]
  ! DIVIDIDO        [ shift and go to state 84 ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 146

    (83) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYORIG         reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENORIG         reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAS             reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ANDBIT          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ORBIT           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    XORBIT          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IZQBIT          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DERBIT          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ANDLOG          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ORLOG           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    XORLOG          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CORDER          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    COMA            reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DOSP            reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    LLAVIZQ         reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ID              reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PRINT           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    GOTO            reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    SWITCH          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    BREAK           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    WHILE           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DO              reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    INT             reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DOUBLE          reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    FLOAT           reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CHAR            reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    VOID            reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IF              reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    RES             shift and go to state 85

  ! RES             [ reduce using rule 83 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! POR             [ shift and go to state 83 ]
  ! DIVIDIDO        [ shift and go to state 84 ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 147

    (84) expresion_numerica -> expresion_numerica RES expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    MENQUE          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    IGUALQUE        reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    NIGUALQUE       reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    MAYORIG         reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    MENORIG         reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    MAS             reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    MENOS           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    POR             reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    DIVIDIDO        reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    RES             reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    ANDBIT          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    ORBIT           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    XORBIT          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    IZQBIT          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    DERBIT          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    PTCOMA          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    ANDLOG          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    ORLOG           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    XORLOG          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    CORDER          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    COMA            reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    PARDER          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    DOSP            reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    LLAVIZQ         reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    ID              reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    PRINT           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    GOTO            reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    SWITCH          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    BREAK           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    WHILE           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    DO              reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    INT             reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    DOUBLE          reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    FLOAT           reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    CHAR            reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    VOID            reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)
    IF              reduce using rule 84 (expresion_numerica -> expresion_numerica RES expresion_numerica .)

  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! POR             [ shift and go to state 83 ]
  ! DIVIDIDO        [ shift and go to state 84 ]
  ! RES             [ shift and go to state 85 ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 148

    (85) expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    MENQUE          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    IGUALQUE        reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    NIGUALQUE       reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    MAYORIG         reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    MENORIG         reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    ANDBIT          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    ORBIT           reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    XORBIT          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    PTCOMA          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    ANDLOG          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    ORLOG           reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    XORLOG          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    CORDER          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    COMA            reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    PARDER          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    DOSP            reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    LLAVIZQ         reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    ID              reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    PRINT           reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    GOTO            reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    SWITCH          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    BREAK           reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    WHILE           reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    DO              reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    INT             reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    DOUBLE          reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    FLOAT           reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    CHAR            reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    VOID            reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    IF              reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90

  ! MAS             [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! MENOS           [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! POR             [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! RES             [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! IZQBIT          [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! DERBIT          [ reduce using rule 85 (expresion_numerica -> expresion_numerica ANDBIT expresion_numerica .) ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]


state 149

    (86) expresion_numerica -> expresion_numerica ORBIT expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    MENQUE          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    IGUALQUE        reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    NIGUALQUE       reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    MAYORIG         reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    MENORIG         reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    ANDBIT          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    ORBIT           reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    XORBIT          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    PTCOMA          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    ANDLOG          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    ORLOG           reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    XORLOG          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    CORDER          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    COMA            reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    PARDER          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    DOSP            reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    LLAVIZQ         reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    ID              reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    PRINT           reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    GOTO            reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    SWITCH          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    BREAK           reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    WHILE           reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    DO              reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    INT             reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    DOUBLE          reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    FLOAT           reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    CHAR            reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    VOID            reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    IF              reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90

  ! MAS             [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! MENOS           [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! POR             [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! RES             [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! IZQBIT          [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! DERBIT          [ reduce using rule 86 (expresion_numerica -> expresion_numerica ORBIT expresion_numerica .) ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]


state 150

    (87) expresion_numerica -> expresion_numerica XORBIT expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    MENQUE          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    IGUALQUE        reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    NIGUALQUE       reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    MAYORIG         reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    MENORIG         reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    XORBIT          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    PTCOMA          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    ANDLOG          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    ORLOG           reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    XORLOG          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    CORDER          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    COMA            reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    PARDER          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    DOSP            reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    LLAVIZQ         reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    ID              reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    PRINT           reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    GOTO            reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    SWITCH          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    BREAK           reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    WHILE           reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    DO              reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    INT             reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    DOUBLE          reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    FLOAT           reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    CHAR            reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    VOID            reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    IF              reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90

  ! MAS             [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! MENOS           [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! POR             [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! RES             [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! ANDBIT          [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! ORBIT           [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! IZQBIT          [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! DERBIT          [ reduce using rule 87 (expresion_numerica -> expresion_numerica XORBIT expresion_numerica .) ]
  ! XORBIT          [ shift and go to state 88 ]


state 151

    (88) expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    MENQUE          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    IGUALQUE        reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    NIGUALQUE       reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    MAYORIG         reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    MENORIG         reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    ANDBIT          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    ORBIT           reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    XORBIT          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    IZQBIT          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    DERBIT          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    PTCOMA          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    ANDLOG          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    ORLOG           reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    XORLOG          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    CORDER          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    COMA            reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    PARDER          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    DOSP            reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    LLAVIZQ         reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    ID              reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    PRINT           reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    GOTO            reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    SWITCH          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    BREAK           reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    WHILE           reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    DO              reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    INT             reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    DOUBLE          reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    FLOAT           reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    CHAR            reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    VOID            reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    IF              reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85

  ! MAS             [ reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .) ]
  ! MENOS           [ reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .) ]
  ! POR             [ reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .) ]
  ! RES             [ reduce using rule 88 (expresion_numerica -> expresion_numerica IZQBIT expresion_numerica .) ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 152

    (89) expresion_numerica -> expresion_numerica DERBIT expresion_numerica .
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    MAYQUE          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    MENQUE          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    IGUALQUE        reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    NIGUALQUE       reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    MAYORIG         reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    MENORIG         reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    ANDBIT          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    ORBIT           reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    XORBIT          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    IZQBIT          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    DERBIT          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    PTCOMA          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    ANDLOG          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    ORLOG           reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    XORLOG          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    CORDER          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    COMA            reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    PARDER          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    DOSP            reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    LLAVIZQ         reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    ID              reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    PRINT           reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    GOTO            reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    SWITCH          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    BREAK           reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    WHILE           reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    DO              reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    INT             reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    DOUBLE          reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    FLOAT           reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    CHAR            reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    VOID            reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    IF              reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85

  ! MAS             [ reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .) ]
  ! MENOS           [ reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .) ]
  ! POR             [ reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .) ]
  ! RES             [ reduce using rule 89 (expresion_numerica -> expresion_numerica DERBIT expresion_numerica .) ]
  ! ANDBIT          [ shift and go to state 86 ]
  ! ORBIT           [ shift and go to state 87 ]
  ! XORBIT          [ shift and go to state 88 ]
  ! IZQBIT          [ shift and go to state 89 ]
  ! DERBIT          [ shift and go to state 90 ]


state 153

    (92) expresion_numerica -> PARIZQ expresion_log_relacional PARDER .

    MAYQUE          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    MENQUE          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    IGUALQUE        reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    NIGUALQUE       reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    MAYORIG         reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    MENORIG         reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    MAS             reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    MENOS           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    POR             reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    DIVIDIDO        reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    RES             reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    ANDBIT          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    ORBIT           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    XORBIT          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    IZQBIT          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    DERBIT          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    PTCOMA          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    ANDLOG          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    ORLOG           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    XORLOG          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    CORDER          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    COMA            reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    PARDER          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    DOSP            reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    LLAVIZQ         reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    ID              reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    PRINT           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    GOTO            reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    SWITCH          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    BREAK           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    WHILE           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    DO              reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    INT             reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    DOUBLE          reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    FLOAT           reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    CHAR            reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    VOID            reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)
    IF              reduce using rule 92 (expresion_numerica -> PARIZQ expresion_log_relacional PARDER .)


state 154

    (104) TIPOCONVERSION -> PARIZQ INT PARDER .

    NOTBIT          reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    MENOS           reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    PARIZQ          reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    ENTERO          reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    DECIMAL         reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    ID              reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    CADENA          reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    CADE            reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    READ            reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    ARRAY           reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    TEMPORAL        reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)
    ABS             reduce using rule 104 (TIPOCONVERSION -> PARIZQ INT PARDER .)


state 155

    (105) TIPOCONVERSION -> PARIZQ FLOAT PARDER .

    NOTBIT          reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    MENOS           reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    PARIZQ          reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    ENTERO          reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    DECIMAL         reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    ID              reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    CADENA          reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    CADE            reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    READ            reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    ARRAY           reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    TEMPORAL        reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)
    ABS             reduce using rule 105 (TIPOCONVERSION -> PARIZQ FLOAT PARDER .)


state 156

    (106) TIPOCONVERSION -> PARIZQ CHAR PARDER .

    NOTBIT          reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    MENOS           reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    PARIZQ          reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    ENTERO          reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    DECIMAL         reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    ID              reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    CADENA          reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    CADE            reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    READ            reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    ARRAY           reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    TEMPORAL        reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)
    ABS             reduce using rule 106 (TIPOCONVERSION -> PARIZQ CHAR PARDER .)


state 157

    (98) expresion_numerica -> READ PARIZQ PARDER .

    MAYQUE          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    MENQUE          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    IGUALQUE        reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    MAYORIG         reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    MENORIG         reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    MAS             reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    MENOS           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    POR             reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    RES             reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    ANDBIT          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    ORBIT           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    XORBIT          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    IZQBIT          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    DERBIT          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    PTCOMA          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    ANDLOG          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    ORLOG           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    XORLOG          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    CORDER          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    COMA            reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    PARDER          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    DOSP            reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    LLAVIZQ         reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    ID              reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    PRINT           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    GOTO            reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    SWITCH          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    BREAK           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    WHILE           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    DO              reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    INT             reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    DOUBLE          reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    FLOAT           reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    CHAR            reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    VOID            reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)
    IF              reduce using rule 98 (expresion_numerica -> READ PARIZQ PARDER .)


state 158

    (99) expresion_numerica -> ARRAY PARIZQ PARDER .

    MAYQUE          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    MENQUE          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    IGUALQUE        reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    MAYORIG         reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    MENORIG         reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    MAS             reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    MENOS           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    POR             reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    RES             reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    ANDBIT          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    ORBIT           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    XORBIT          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    IZQBIT          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    DERBIT          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    PTCOMA          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    ANDLOG          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    ORLOG           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    XORLOG          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    CORDER          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    COMA            reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    PARDER          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    DOSP            reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    LLAVIZQ         reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    ID              reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    PRINT           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    GOTO            reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    SWITCH          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    BREAK           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    WHILE           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    DO              reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    INT             reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    DOUBLE          reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    FLOAT           reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    CHAR            reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    VOID            reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)
    IF              reduce using rule 99 (expresion_numerica -> ARRAY PARIZQ PARDER .)


state 159

    (101) ACCESO -> ACCESO CORIZQ . expresion_numerica CORDER
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 181
    TIPOCONVERSION                 shift and go to state 58

state 160

    (102) ACCESO -> CORIZQ expresion_numerica . CORDER
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    CORDER          shift and go to state 182
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 161

    (107) expresion_numerica -> ABS PARIZQ expresion_numerica . PARDER
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PARDER          shift and go to state 183
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 162

    (24) STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER . PTCOMA

    PTCOMA          shift and go to state 184


state 163

    (25) IDSTRUCT -> IDSTRUCT TIPO_VAR . ID PTCOMA

    ID              shift and go to state 185


state 164

    (26) IDSTRUCT -> TIPO_VAR ID . PTCOMA

    PTCOMA          shift and go to state 186


state 165

    (44) FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .

    ID              reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    STRUCT          reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    INT             reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    DOUBLE          reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    FLOAT           reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    CHAR            reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    VOID            reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)
    $end            reduce using rule 44 (FUNCION -> TIPO_VAR ID PARIZQ PARAMETROS PARDER BLOQUE .)


state 166

    (45) PARAMETROS -> PARAMETROS COMA PARAMETRO .

    PARDER          reduce using rule 45 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)
    COMA            reduce using rule 45 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)


state 167

    (49) BLOQUE -> LLAVIZQ SENTENCIAS . LLAVDER
    (51) SENTENCIAS -> SENTENCIAS . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVDER         shift and go to state 187
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIA                      shift and go to state 168
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 168

    (51) SENTENCIAS -> SENTENCIAS SENTENCIA .

    ID              reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    PRINT           reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    GOTO            reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    SWITCH          reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    BREAK           reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    WHILE           reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    DO              reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    INT             reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    DOUBLE          reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    FLOAT           reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    CHAR            reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    VOID            reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    IF              reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    STRUCT          reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    $end            reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    LLAVDER         reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    ELSE            reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    CASE            reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)
    DEFAULT         reduce using rule 51 (SENTENCIAS -> SENTENCIAS SENTENCIA .)


state 169

    (10) DEFINEL -> ID DOSP .

    ID              reduce using rule 10 (DEFINEL -> ID DOSP .)
    PRINT           reduce using rule 10 (DEFINEL -> ID DOSP .)
    GOTO            reduce using rule 10 (DEFINEL -> ID DOSP .)
    SWITCH          reduce using rule 10 (DEFINEL -> ID DOSP .)
    BREAK           reduce using rule 10 (DEFINEL -> ID DOSP .)
    WHILE           reduce using rule 10 (DEFINEL -> ID DOSP .)
    DO              reduce using rule 10 (DEFINEL -> ID DOSP .)
    INT             reduce using rule 10 (DEFINEL -> ID DOSP .)
    DOUBLE          reduce using rule 10 (DEFINEL -> ID DOSP .)
    FLOAT           reduce using rule 10 (DEFINEL -> ID DOSP .)
    CHAR            reduce using rule 10 (DEFINEL -> ID DOSP .)
    VOID            reduce using rule 10 (DEFINEL -> ID DOSP .)
    IF              reduce using rule 10 (DEFINEL -> ID DOSP .)
    STRUCT          reduce using rule 10 (DEFINEL -> ID DOSP .)
    $end            reduce using rule 10 (DEFINEL -> ID DOSP .)
    LLAVDER         reduce using rule 10 (DEFINEL -> ID DOSP .)
    ELSE            reduce using rule 10 (DEFINEL -> ID DOSP .)
    CASE            reduce using rule 10 (DEFINEL -> ID DOSP .)
    DEFAULT         reduce using rule 10 (DEFINEL -> ID DOSP .)


state 170

    (12) imprimir_instr -> PRINT PARIZQ . expresion_log_relacional PARDER PTCOMA
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 188
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 171

    (11) DEFINEGOTO -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 189


state 172

    (72) IFFUN -> if_instr LISTA_ELSEIF .
    (73) IFFUN -> if_instr LISTA_ELSEIF . else_instr
    (76) LISTA_ELSEIF -> LISTA_ELSEIF . if_else_instr
    (79) else_instr -> . ELSE BLOQUE
    (78) if_else_instr -> . ELSE if_instr

  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    PRINT           reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    GOTO            reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    SWITCH          reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    BREAK           reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    WHILE           reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    DO              reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    INT             reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    DOUBLE          reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    FLOAT           reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    CHAR            reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    VOID            reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    IF              reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    STRUCT          reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    $end            reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    LLAVDER         reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    CASE            reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    DEFAULT         reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .)
    ELSE            shift and go to state 175

  ! ELSE            [ reduce using rule 72 (IFFUN -> if_instr LISTA_ELSEIF .) ]

    else_instr                     shift and go to state 190
    if_else_instr                  shift and go to state 191

state 173

    (74) IFFUN -> if_instr else_instr .

    ID              reduce using rule 74 (IFFUN -> if_instr else_instr .)
    PRINT           reduce using rule 74 (IFFUN -> if_instr else_instr .)
    GOTO            reduce using rule 74 (IFFUN -> if_instr else_instr .)
    SWITCH          reduce using rule 74 (IFFUN -> if_instr else_instr .)
    BREAK           reduce using rule 74 (IFFUN -> if_instr else_instr .)
    WHILE           reduce using rule 74 (IFFUN -> if_instr else_instr .)
    DO              reduce using rule 74 (IFFUN -> if_instr else_instr .)
    INT             reduce using rule 74 (IFFUN -> if_instr else_instr .)
    DOUBLE          reduce using rule 74 (IFFUN -> if_instr else_instr .)
    FLOAT           reduce using rule 74 (IFFUN -> if_instr else_instr .)
    CHAR            reduce using rule 74 (IFFUN -> if_instr else_instr .)
    VOID            reduce using rule 74 (IFFUN -> if_instr else_instr .)
    IF              reduce using rule 74 (IFFUN -> if_instr else_instr .)
    STRUCT          reduce using rule 74 (IFFUN -> if_instr else_instr .)
    $end            reduce using rule 74 (IFFUN -> if_instr else_instr .)
    LLAVDER         reduce using rule 74 (IFFUN -> if_instr else_instr .)
    ELSE            reduce using rule 74 (IFFUN -> if_instr else_instr .)
    CASE            reduce using rule 74 (IFFUN -> if_instr else_instr .)
    DEFAULT         reduce using rule 74 (IFFUN -> if_instr else_instr .)


state 174

    (77) LISTA_ELSEIF -> if_else_instr .

    ID              reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    PRINT           reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    GOTO            reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    SWITCH          reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    BREAK           reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    WHILE           reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    DO              reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    INT             reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    DOUBLE          reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    FLOAT           reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    CHAR            reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    VOID            reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    IF              reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    STRUCT          reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    $end            reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    LLAVDER         reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    ELSE            reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    CASE            reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)
    DEFAULT         reduce using rule 77 (LISTA_ELSEIF -> if_else_instr .)


state 175

    (79) else_instr -> ELSE . BLOQUE
    (78) if_else_instr -> ELSE . if_instr
    (49) BLOQUE -> . LLAVIZQ SENTENCIAS LLAVDER
    (50) BLOQUE -> . SENTENCIAS
    (75) if_instr -> . IF expresion_numerica BLOQUE
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID

    LLAVIZQ         shift and go to state 112
    IF              shift and go to state 133
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16

    BLOQUE                         shift and go to state 192
    if_instr                       shift and go to state 193
    SENTENCIAS                     shift and go to state 113
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110

state 176

    (65) SWITCHFUN -> SWITCH expresion_numerica . LLAVIZQ LISTACASE LLAVDER
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    LLAVIZQ         shift and go to state 194
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 177

    (70) BREAKF -> BREAK PTCOMA .

    ID              reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    PRINT           reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    GOTO            reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    SWITCH          reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    BREAK           reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    WHILE           reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    DO              reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    INT             reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    DOUBLE          reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    FLOAT           reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    CHAR            reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    VOID            reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    IF              reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    STRUCT          reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    $end            reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    LLAVDER         reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    ELSE            reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    CASE            reduce using rule 70 (BREAKF -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 70 (BREAKF -> BREAK PTCOMA .)


state 178

    (64) WHILEF -> WHILE expresion_numerica . LLAVIZQ SENTENCIAS LLAVDER
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    LLAVIZQ         shift and go to state 195
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 179

    (63) DOFUN -> DO LLAVIZQ . SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIAS                     shift and go to state 196
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 180

    (75) if_instr -> IF expresion_numerica . BLOQUE
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica
    (49) BLOQUE -> . LLAVIZQ SENTENCIAS LLAVDER
    (50) BLOQUE -> . SENTENCIAS
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90
    LLAVIZQ         shift and go to state 112
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    BLOQUE                         shift and go to state 197
    SENTENCIAS                     shift and go to state 113
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 181

    (101) ACCESO -> ACCESO CORIZQ expresion_numerica . CORDER
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    CORDER          shift and go to state 198
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 182

    (102) ACCESO -> CORIZQ expresion_numerica CORDER .

    CORIZQ          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    MAYQUE          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    MENQUE          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    IGUALQUE        reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    NIGUALQUE       reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    MAYORIG         reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    MENORIG         reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    MAS             reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    MENOS           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    POR             reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    DIVIDIDO        reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    RES             reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    ANDBIT          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    ORBIT           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    XORBIT          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    IZQBIT          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    DERBIT          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    PTCOMA          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    ANDLOG          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    ORLOG           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    XORLOG          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    CORDER          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    COMA            reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    PARDER          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    DOSP            reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    LLAVIZQ         reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    ID              reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    PRINT           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    GOTO            reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    SWITCH          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    BREAK           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    WHILE           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    DO              reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    INT             reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    DOUBLE          reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    FLOAT           reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    CHAR            reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    VOID            reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)
    IF              reduce using rule 102 (ACCESO -> CORIZQ expresion_numerica CORDER .)


state 183

    (107) expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .

    MAYQUE          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    MAYORIG         reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    MENORIG         reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    MAS             reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    RES             reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    ANDBIT          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    ORBIT           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    XORBIT          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    IZQBIT          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    DERBIT          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    ANDLOG          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    ORLOG           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    XORLOG          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    CORDER          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    COMA            reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    DOSP            reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    LLAVIZQ         reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    ID              reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    PRINT           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    GOTO            reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    SWITCH          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    BREAK           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    WHILE           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    DO              reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    INT             reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    DOUBLE          reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    FLOAT           reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    CHAR            reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    VOID            reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)
    IF              reduce using rule 107 (expresion_numerica -> ABS PARIZQ expresion_numerica PARDER .)


state 184

    (24) STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .

    ID              reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    STRUCT          reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    INT             reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    DOUBLE          reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    FLOAT           reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    CHAR            reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    VOID            reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)
    $end            reduce using rule 24 (STRUCTDEF -> STRUCT ID LLAVIZQ IDSTRUCT LLAVDER PTCOMA .)


state 185

    (25) IDSTRUCT -> IDSTRUCT TIPO_VAR ID . PTCOMA

    PTCOMA          shift and go to state 199


state 186

    (26) IDSTRUCT -> TIPO_VAR ID PTCOMA .

    LLAVDER         reduce using rule 26 (IDSTRUCT -> TIPO_VAR ID PTCOMA .)
    INT             reduce using rule 26 (IDSTRUCT -> TIPO_VAR ID PTCOMA .)
    DOUBLE          reduce using rule 26 (IDSTRUCT -> TIPO_VAR ID PTCOMA .)
    FLOAT           reduce using rule 26 (IDSTRUCT -> TIPO_VAR ID PTCOMA .)
    CHAR            reduce using rule 26 (IDSTRUCT -> TIPO_VAR ID PTCOMA .)
    VOID            reduce using rule 26 (IDSTRUCT -> TIPO_VAR ID PTCOMA .)


state 187

    (49) BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .

    ID              reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    STRUCT          reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    INT             reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    DOUBLE          reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    FLOAT           reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    CHAR            reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    VOID            reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    $end            reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    PRINT           reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    GOTO            reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    SWITCH          reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    BREAK           reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    WHILE           reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    DO              reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    IF              reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    LLAVDER         reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    ELSE            reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    CASE            reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)
    DEFAULT         reduce using rule 49 (BLOQUE -> LLAVIZQ SENTENCIAS LLAVDER .)


state 188

    (12) imprimir_instr -> PRINT PARIZQ expresion_log_relacional . PARDER PTCOMA
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    PARDER          shift and go to state 200
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74


state 189

    (11) DEFINEGOTO -> GOTO ID PTCOMA .

    ID              reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    PRINT           reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    SWITCH          reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    BREAK           reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    WHILE           reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    DO              reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    INT             reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    DOUBLE          reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    FLOAT           reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    CHAR            reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    VOID            reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    IF              reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    STRUCT          reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    $end            reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    LLAVDER         reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    ELSE            reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    CASE            reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)
    DEFAULT         reduce using rule 11 (DEFINEGOTO -> GOTO ID PTCOMA .)


state 190

    (73) IFFUN -> if_instr LISTA_ELSEIF else_instr .

    ID              reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    PRINT           reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    GOTO            reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    SWITCH          reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    BREAK           reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    WHILE           reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    DO              reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    INT             reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    DOUBLE          reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    FLOAT           reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    CHAR            reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    VOID            reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    IF              reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    STRUCT          reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    $end            reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    LLAVDER         reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    ELSE            reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    CASE            reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)
    DEFAULT         reduce using rule 73 (IFFUN -> if_instr LISTA_ELSEIF else_instr .)


state 191

    (76) LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .

    ID              reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    PRINT           reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    GOTO            reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    SWITCH          reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    BREAK           reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    WHILE           reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    DO              reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    INT             reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    DOUBLE          reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    FLOAT           reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    CHAR            reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    VOID            reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    IF              reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    STRUCT          reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    $end            reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    LLAVDER         reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    ELSE            reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    CASE            reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)
    DEFAULT         reduce using rule 76 (LISTA_ELSEIF -> LISTA_ELSEIF if_else_instr .)


state 192

    (79) else_instr -> ELSE BLOQUE .

    ID              reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    PRINT           reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    GOTO            reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    SWITCH          reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    BREAK           reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    WHILE           reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    DO              reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    INT             reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    DOUBLE          reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    FLOAT           reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    CHAR            reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    VOID            reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    IF              reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    STRUCT          reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    $end            reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    LLAVDER         reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    ELSE            reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    CASE            reduce using rule 79 (else_instr -> ELSE BLOQUE .)
    DEFAULT         reduce using rule 79 (else_instr -> ELSE BLOQUE .)


state 193

    (78) if_else_instr -> ELSE if_instr .
    (71) IFFUN -> if_instr .
    (72) IFFUN -> if_instr . LISTA_ELSEIF
    (73) IFFUN -> if_instr . LISTA_ELSEIF else_instr
    (74) IFFUN -> if_instr . else_instr
    (76) LISTA_ELSEIF -> . LISTA_ELSEIF if_else_instr
    (77) LISTA_ELSEIF -> . if_else_instr
    (79) else_instr -> . ELSE BLOQUE
    (78) if_else_instr -> . ELSE if_instr

  ! reduce/reduce conflict for ID resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for PRINT resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for GOTO resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for SWITCH resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for BREAK resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for WHILE resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for DO resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for INT resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for FLOAT resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for CHAR resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for VOID resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for IF resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for STRUCT resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for $end resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for ELSE resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for CASE resolved using rule 71 (IFFUN -> if_instr .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 71 (IFFUN -> if_instr .)
  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 71 (IFFUN -> if_instr .)
    PRINT           reduce using rule 71 (IFFUN -> if_instr .)
    GOTO            reduce using rule 71 (IFFUN -> if_instr .)
    SWITCH          reduce using rule 71 (IFFUN -> if_instr .)
    BREAK           reduce using rule 71 (IFFUN -> if_instr .)
    WHILE           reduce using rule 71 (IFFUN -> if_instr .)
    DO              reduce using rule 71 (IFFUN -> if_instr .)
    INT             reduce using rule 71 (IFFUN -> if_instr .)
    DOUBLE          reduce using rule 71 (IFFUN -> if_instr .)
    FLOAT           reduce using rule 71 (IFFUN -> if_instr .)
    CHAR            reduce using rule 71 (IFFUN -> if_instr .)
    VOID            reduce using rule 71 (IFFUN -> if_instr .)
    IF              reduce using rule 71 (IFFUN -> if_instr .)
    STRUCT          reduce using rule 71 (IFFUN -> if_instr .)
    $end            reduce using rule 71 (IFFUN -> if_instr .)
    LLAVDER         reduce using rule 71 (IFFUN -> if_instr .)
    CASE            reduce using rule 71 (IFFUN -> if_instr .)
    DEFAULT         reduce using rule 71 (IFFUN -> if_instr .)
    ELSE            shift and go to state 175

  ! ID              [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! PRINT           [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! GOTO            [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! SWITCH          [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! BREAK           [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! WHILE           [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! DO              [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! INT             [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! DOUBLE          [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! FLOAT           [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! CHAR            [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! VOID            [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! IF              [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! STRUCT          [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! $end            [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! LLAVDER         [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! ELSE            [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! CASE            [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! DEFAULT         [ reduce using rule 78 (if_else_instr -> ELSE if_instr .) ]
  ! ELSE            [ reduce using rule 71 (IFFUN -> if_instr .) ]

    LISTA_ELSEIF                   shift and go to state 172
    else_instr                     shift and go to state 173
    if_else_instr                  shift and go to state 174

state 194

    (65) SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ . LISTACASE LLAVDER
    (66) LISTACASE -> . LISTACASE CASES
    (67) LISTACASE -> . CASES
    (68) CASES -> . CASE expresion_log_relacional DOSP SENTENCIAS
    (69) CASES -> . DEFAULT DOSP SENTENCIAS

    CASE            shift and go to state 203
    DEFAULT         shift and go to state 204

    LISTACASE                      shift and go to state 201
    CASES                          shift and go to state 202

state 195

    (64) WHILEF -> WHILE expresion_numerica LLAVIZQ . SENTENCIAS LLAVDER
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIAS                     shift and go to state 205
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 196

    (63) DOFUN -> DO LLAVIZQ SENTENCIAS . LLAVDER WHILE expresion_numerica PTCOMA
    (51) SENTENCIAS -> SENTENCIAS . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVDER         shift and go to state 206
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIA                      shift and go to state 168
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 197

    (75) if_instr -> IF expresion_numerica BLOQUE .

    ELSE            reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    ID              reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    PRINT           reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    GOTO            reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    SWITCH          reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    BREAK           reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    WHILE           reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    DO              reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    INT             reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    DOUBLE          reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    FLOAT           reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    CHAR            reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    VOID            reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    IF              reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    STRUCT          reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    $end            reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    LLAVDER         reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    CASE            reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)
    DEFAULT         reduce using rule 75 (if_instr -> IF expresion_numerica BLOQUE .)


state 198

    (101) ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .

    CORIZQ          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    MAYQUE          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    MENQUE          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    IGUALQUE        reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    NIGUALQUE       reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    MAYORIG         reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    MENORIG         reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    MAS             reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    MENOS           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    POR             reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    DIVIDIDO        reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    RES             reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    ANDBIT          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    ORBIT           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    XORBIT          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    IZQBIT          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    DERBIT          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    PTCOMA          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    ANDLOG          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    ORLOG           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    XORLOG          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    CORDER          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    COMA            reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    PARDER          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    DOSP            reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    LLAVIZQ         reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    ID              reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    PRINT           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    GOTO            reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    SWITCH          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    BREAK           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    WHILE           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    DO              reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    INT             reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    DOUBLE          reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    FLOAT           reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    CHAR            reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    VOID            reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)
    IF              reduce using rule 101 (ACCESO -> ACCESO CORIZQ expresion_numerica CORDER .)


state 199

    (25) IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .

    LLAVDER         reduce using rule 25 (IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .)
    INT             reduce using rule 25 (IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .)
    DOUBLE          reduce using rule 25 (IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .)
    FLOAT           reduce using rule 25 (IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .)
    CHAR            reduce using rule 25 (IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .)
    VOID            reduce using rule 25 (IDSTRUCT -> IDSTRUCT TIPO_VAR ID PTCOMA .)


state 200

    (12) imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER . PTCOMA

    PTCOMA          shift and go to state 207


state 201

    (65) SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE . LLAVDER
    (66) LISTACASE -> LISTACASE . CASES
    (68) CASES -> . CASE expresion_log_relacional DOSP SENTENCIAS
    (69) CASES -> . DEFAULT DOSP SENTENCIAS

    LLAVDER         shift and go to state 208
    CASE            shift and go to state 203
    DEFAULT         shift and go to state 204

    CASES                          shift and go to state 209

state 202

    (67) LISTACASE -> CASES .

    LLAVDER         reduce using rule 67 (LISTACASE -> CASES .)
    CASE            reduce using rule 67 (LISTACASE -> CASES .)
    DEFAULT         reduce using rule 67 (LISTACASE -> CASES .)


state 203

    (68) CASES -> CASE . expresion_log_relacional DOSP SENTENCIAS
    (108) expresion_log_relacional -> . expresion_numerica MAYQUE expresion_numerica
    (109) expresion_log_relacional -> . expresion_numerica MENQUE expresion_numerica
    (110) expresion_log_relacional -> . expresion_numerica IGUALQUE expresion_numerica
    (111) expresion_log_relacional -> . expresion_numerica NIGUALQUE expresion_numerica
    (112) expresion_log_relacional -> . expresion_numerica MAYORIG expresion_numerica
    (113) expresion_log_relacional -> . expresion_numerica MENORIG expresion_numerica
    (114) expresion_log_relacional -> . expresion_log_relacional ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> . expresion_log_relacional ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> . expresion_log_relacional XORLOG expresion_log_relacional
    (117) expresion_log_relacional -> . NOTLOG expresion_log_relacional
    (118) expresion_log_relacional -> . expresion_numerica
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTLOG          shift and go to state 47
    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_log_relacional       shift and go to state 210
    expresion_numerica             shift and go to state 46
    TIPOCONVERSION                 shift and go to state 58

state 204

    (69) CASES -> DEFAULT . DOSP SENTENCIAS

    DOSP            shift and go to state 211


state 205

    (64) WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS . LLAVDER
    (51) SENTENCIAS -> SENTENCIAS . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVDER         shift and go to state 212
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIA                      shift and go to state 168
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 206

    (63) DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER . WHILE expresion_numerica PTCOMA

    WHILE           shift and go to state 213


state 207

    (12) imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .

    ID              reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    PRINT           reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    GOTO            reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    SWITCH          reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    BREAK           reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    WHILE           reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    DO              reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    INT             reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    DOUBLE          reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    FLOAT           reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    CHAR            reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    VOID            reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    IF              reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    STRUCT          reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    $end            reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    LLAVDER         reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    ELSE            reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    CASE            reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)
    DEFAULT         reduce using rule 12 (imprimir_instr -> PRINT PARIZQ expresion_log_relacional PARDER PTCOMA .)


state 208

    (65) SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .

    ID              reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    PRINT           reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    GOTO            reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    SWITCH          reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    BREAK           reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    WHILE           reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    DO              reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    INT             reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    DOUBLE          reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    FLOAT           reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    CHAR            reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    VOID            reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    IF              reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    STRUCT          reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    $end            reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    LLAVDER         reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    ELSE            reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    CASE            reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)
    DEFAULT         reduce using rule 65 (SWITCHFUN -> SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER .)


state 209

    (66) LISTACASE -> LISTACASE CASES .

    LLAVDER         reduce using rule 66 (LISTACASE -> LISTACASE CASES .)
    CASE            reduce using rule 66 (LISTACASE -> LISTACASE CASES .)
    DEFAULT         reduce using rule 66 (LISTACASE -> LISTACASE CASES .)


state 210

    (68) CASES -> CASE expresion_log_relacional . DOSP SENTENCIAS
    (114) expresion_log_relacional -> expresion_log_relacional . ANDLOG expresion_log_relacional
    (115) expresion_log_relacional -> expresion_log_relacional . ORLOG expresion_log_relacional
    (116) expresion_log_relacional -> expresion_log_relacional . XORLOG expresion_log_relacional

    DOSP            shift and go to state 214
    ANDLOG          shift and go to state 72
    ORLOG           shift and go to state 73
    XORLOG          shift and go to state 74


state 211

    (69) CASES -> DEFAULT DOSP . SENTENCIAS
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIAS                     shift and go to state 215
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 212

    (64) WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .

    ID              reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    PRINT           reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    GOTO            reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    SWITCH          reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    BREAK           reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    WHILE           reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    DO              reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    INT             reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    DOUBLE          reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    FLOAT           reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    CHAR            reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    VOID            reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    IF              reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    STRUCT          reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    $end            reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    LLAVDER         reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    ELSE            reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    CASE            reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)
    DEFAULT         reduce using rule 64 (WHILEF -> WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER .)


state 213

    (63) DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE . expresion_numerica PTCOMA
    (80) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (81) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (82) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (83) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (84) expresion_numerica -> . expresion_numerica RES expresion_numerica
    (85) expresion_numerica -> . expresion_numerica ANDBIT expresion_numerica
    (86) expresion_numerica -> . expresion_numerica ORBIT expresion_numerica
    (87) expresion_numerica -> . expresion_numerica XORBIT expresion_numerica
    (88) expresion_numerica -> . expresion_numerica IZQBIT expresion_numerica
    (89) expresion_numerica -> . expresion_numerica DERBIT expresion_numerica
    (90) expresion_numerica -> . NOTBIT expresion_numerica
    (91) expresion_numerica -> . MENOS expresion_numerica
    (92) expresion_numerica -> . PARIZQ expresion_log_relacional PARDER
    (93) expresion_numerica -> . ENTERO
    (94) expresion_numerica -> . DECIMAL
    (95) expresion_numerica -> . ID
    (96) expresion_numerica -> . CADENA
    (97) expresion_numerica -> . CADE
    (98) expresion_numerica -> . READ PARIZQ PARDER
    (99) expresion_numerica -> . ARRAY PARIZQ PARDER
    (100) expresion_numerica -> . TEMPORAL ACCESO
    (103) expresion_numerica -> . TIPOCONVERSION expresion_numerica
    (107) expresion_numerica -> . ABS PARIZQ expresion_numerica PARDER
    (104) TIPOCONVERSION -> . PARIZQ INT PARDER
    (105) TIPOCONVERSION -> . PARIZQ FLOAT PARDER
    (106) TIPOCONVERSION -> . PARIZQ CHAR PARDER

    NOTBIT          shift and go to state 49
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 50
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    ID              shift and go to state 44
    CADENA          shift and go to state 53
    CADE            shift and go to state 54
    READ            shift and go to state 55
    ARRAY           shift and go to state 56
    TEMPORAL        shift and go to state 57
    ABS             shift and go to state 59

    expresion_numerica             shift and go to state 216
    TIPOCONVERSION                 shift and go to state 58

state 214

    (68) CASES -> CASE expresion_log_relacional DOSP . SENTENCIAS
    (51) SENTENCIAS -> . SENTENCIAS SENTENCIA
    (52) SENTENCIAS -> . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIAS                     shift and go to state 217
    SENTENCIA                      shift and go to state 114
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 215

    (69) CASES -> DEFAULT DOSP SENTENCIAS .
    (51) SENTENCIAS -> SENTENCIAS . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVDER         reduce using rule 69 (CASES -> DEFAULT DOSP SENTENCIAS .)
    CASE            reduce using rule 69 (CASES -> DEFAULT DOSP SENTENCIAS .)
    DEFAULT         reduce using rule 69 (CASES -> DEFAULT DOSP SENTENCIAS .)
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIA                      shift and go to state 168
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 216

    (63) DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica . PTCOMA
    (80) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (81) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (82) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (83) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (84) expresion_numerica -> expresion_numerica . RES expresion_numerica
    (85) expresion_numerica -> expresion_numerica . ANDBIT expresion_numerica
    (86) expresion_numerica -> expresion_numerica . ORBIT expresion_numerica
    (87) expresion_numerica -> expresion_numerica . XORBIT expresion_numerica
    (88) expresion_numerica -> expresion_numerica . IZQBIT expresion_numerica
    (89) expresion_numerica -> expresion_numerica . DERBIT expresion_numerica

    PTCOMA          shift and go to state 218
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    RES             shift and go to state 85
    ANDBIT          shift and go to state 86
    ORBIT           shift and go to state 87
    XORBIT          shift and go to state 88
    IZQBIT          shift and go to state 89
    DERBIT          shift and go to state 90


state 217

    (68) CASES -> CASE expresion_log_relacional DOSP SENTENCIAS .
    (51) SENTENCIAS -> SENTENCIAS . SENTENCIA
    (53) SENTENCIA -> . definicion_instr
    (54) SENTENCIA -> . asignacion_instr
    (55) SENTENCIA -> . imprimir_instr
    (56) SENTENCIA -> . DEFINEL
    (57) SENTENCIA -> . DEFINEGOTO
    (58) SENTENCIA -> . IFFUN
    (59) SENTENCIA -> . SWITCHFUN
    (60) SENTENCIA -> . BREAKF
    (61) SENTENCIA -> . WHILEF
    (62) SENTENCIA -> . DOFUN
    (13) definicion_instr -> . TIPO_VAR LISTAID PTCOMA
    (32) asignacion_instr -> . ID TIPO_AS expresion_log_relacional PTCOMA
    (12) imprimir_instr -> . PRINT PARIZQ expresion_log_relacional PARDER PTCOMA
    (10) DEFINEL -> . ID DOSP
    (11) DEFINEGOTO -> . GOTO ID PTCOMA
    (71) IFFUN -> . if_instr
    (72) IFFUN -> . if_instr LISTA_ELSEIF
    (73) IFFUN -> . if_instr LISTA_ELSEIF else_instr
    (74) IFFUN -> . if_instr else_instr
    (65) SWITCHFUN -> . SWITCH expresion_numerica LLAVIZQ LISTACASE LLAVDER
    (70) BREAKF -> . BREAK PTCOMA
    (64) WHILEF -> . WHILE expresion_numerica LLAVIZQ SENTENCIAS LLAVDER
    (63) DOFUN -> . DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA
    (27) TIPO_VAR -> . INT
    (28) TIPO_VAR -> . DOUBLE
    (29) TIPO_VAR -> . FLOAT
    (30) TIPO_VAR -> . CHAR
    (31) TIPO_VAR -> . VOID
    (75) if_instr -> . IF expresion_numerica BLOQUE

    LLAVDER         reduce using rule 68 (CASES -> CASE expresion_log_relacional DOSP SENTENCIAS .)
    CASE            reduce using rule 68 (CASES -> CASE expresion_log_relacional DOSP SENTENCIAS .)
    DEFAULT         reduce using rule 68 (CASES -> CASE expresion_log_relacional DOSP SENTENCIAS .)
    ID              shift and go to state 125
    PRINT           shift and go to state 126
    GOTO            shift and go to state 127
    SWITCH          shift and go to state 129
    BREAK           shift and go to state 130
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    INT             shift and go to state 12
    DOUBLE          shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 16
    IF              shift and go to state 133

    SENTENCIA                      shift and go to state 168
    definicion_instr               shift and go to state 115
    asignacion_instr               shift and go to state 116
    imprimir_instr                 shift and go to state 117
    DEFINEL                        shift and go to state 118
    DEFINEGOTO                     shift and go to state 119
    IFFUN                          shift and go to state 120
    SWITCHFUN                      shift and go to state 121
    BREAKF                         shift and go to state 122
    WHILEF                         shift and go to state 123
    DOFUN                          shift and go to state 124
    TIPO_VAR                       shift and go to state 110
    if_instr                       shift and go to state 128

state 218

    (63) DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .

    ID              reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    PRINT           reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    GOTO            reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    SWITCH          reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    BREAK           reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    WHILE           reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    DO              reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    INT             reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    DOUBLE          reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    FLOAT           reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    CHAR            reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    VOID            reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    IF              reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    STRUCT          reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    $end            reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    ELSE            reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    CASE            reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)
    DEFAULT         reduce using rule 63 (DOFUN -> DO LLAVIZQ SENTENCIAS LLAVDER WHILE expresion_numerica PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 102 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 102 resolved as shift
WARNING: shift/reduce conflict for POR in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 102 resolved as shift
WARNING: shift/reduce conflict for RES in state 102 resolved as shift
WARNING: shift/reduce conflict for ANDBIT in state 102 resolved as shift
WARNING: shift/reduce conflict for ORBIT in state 102 resolved as shift
WARNING: shift/reduce conflict for XORBIT in state 102 resolved as shift
WARNING: shift/reduce conflict for IZQBIT in state 102 resolved as shift
WARNING: shift/reduce conflict for DERBIT in state 102 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 113 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 113 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 113 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 113 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 113 resolved as shift
WARNING: shift/reduce conflict for DO in state 113 resolved as shift
WARNING: shift/reduce conflict for INT in state 113 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 113 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 113 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 113 resolved as shift
WARNING: shift/reduce conflict for VOID in state 113 resolved as shift
WARNING: shift/reduce conflict for IF in state 113 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 128 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 172 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 193 resolved as shift
WARNING: reduce/reduce conflict in state 193 resolved using rule (IFFUN -> if_instr)
WARNING: rejected rule (if_else_instr -> ELSE if_instr) in state 193
WARNING: Rule (if_else_instr -> ELSE if_instr) is never reduced
